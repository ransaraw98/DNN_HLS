// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dnn_pow_generic_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        exp,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] exp;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0;
reg    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0;
wire   [57:0] pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
wire   [7:0] pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0;
reg    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0;
wire   [25:0] pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
wire   [7:0] pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1;
reg    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1;
wire   [25:0] pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1;
wire   [7:0] pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0;
reg    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0;
wire   [41:0] pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
wire   [0:0] p_Result_7_fu_267_p3;
reg   [0:0] p_Result_7_reg_1228;
reg   [0:0] p_Result_7_reg_1228_pp0_iter1_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter2_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter3_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter4_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter5_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter6_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter7_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter8_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter9_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter10_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter11_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter12_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter13_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter14_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter15_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter16_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter17_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter18_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter19_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter20_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter21_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter22_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter23_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter24_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter25_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter26_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter27_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter28_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter29_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter30_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter31_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter32_reg;
reg   [0:0] p_Result_7_reg_1228_pp0_iter33_reg;
reg   [10:0] tmp_16_reg_1235;
reg   [10:0] tmp_16_reg_1235_pp0_iter1_reg;
reg   [10:0] tmp_16_reg_1235_pp0_iter2_reg;
reg   [10:0] tmp_16_reg_1235_pp0_iter3_reg;
reg   [10:0] tmp_16_reg_1235_pp0_iter4_reg;
reg   [10:0] tmp_16_reg_1235_pp0_iter5_reg;
wire   [0:0] icmp_ln824_1_fu_289_p2;
reg   [0:0] icmp_ln824_1_reg_1243;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter1_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter2_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter3_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter4_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter5_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter6_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter7_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter8_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter9_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter10_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter11_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter12_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter13_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter14_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter15_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter16_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter17_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter18_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter19_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter20_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter21_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter22_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter23_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter24_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter25_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter26_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter27_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter28_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter29_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter30_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter31_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter32_reg;
reg   [0:0] icmp_ln824_1_reg_1243_pp0_iter33_reg;
wire   [53:0] e_frac_V_2_fu_309_p3;
reg  signed [53:0] e_frac_V_2_reg_1249;
wire  signed [119:0] grp_fu_320_p2;
reg  signed [119:0] m_frac_l_V_reg_1259;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter6_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter7_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter8_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter9_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter10_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter11_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter12_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter13_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter14_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter15_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter16_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter17_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter18_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter19_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter20_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter21_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter22_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter23_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter24_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter25_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter26_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter27_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter28_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter29_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter30_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter31_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter32_reg;
reg  signed [119:0] m_frac_l_V_reg_1259_pp0_iter33_reg;
wire  signed [11:0] m_exp_fu_329_p2;
reg  signed [11:0] m_exp_reg_1268;
wire   [0:0] y_is_0_fu_335_p2;
reg   [0:0] y_is_0_reg_1275;
reg   [0:0] y_is_0_reg_1275_pp0_iter7_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter8_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter9_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter10_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter11_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter12_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter13_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter14_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter15_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter16_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter17_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter18_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter19_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter20_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter21_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter22_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter23_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter24_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter25_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter26_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter27_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter28_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter29_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter30_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter31_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter32_reg;
reg   [0:0] y_is_0_reg_1275_pp0_iter33_reg;
wire   [0:0] icmp_ln824_fu_340_p2;
reg   [0:0] icmp_ln824_reg_1281;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter7_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter8_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter9_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter10_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter11_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter12_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter13_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter14_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter15_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter16_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter17_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter18_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter19_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter20_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter21_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter22_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter23_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter24_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter25_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter26_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter27_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter28_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter29_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter30_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter31_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter32_reg;
reg   [0:0] icmp_ln824_reg_1281_pp0_iter33_reg;
wire  signed [130:0] sext_ln568_fu_345_p1;
reg  signed [130:0] sext_ln568_reg_1287;
wire   [0:0] isNeg_fu_348_p3;
reg   [0:0] isNeg_reg_1292;
wire  signed [31:0] sh_prom_i_i366_cast_cast_cast_fu_373_p1;
reg  signed [31:0] sh_prom_i_i366_cast_cast_cast_reg_1297;
wire   [129:0] m_fix_l_fu_404_p3;
reg   [129:0] m_fix_l_reg_1302;
wire   [129:0] r_V_8_fu_459_p3;
reg   [129:0] r_V_8_reg_1308;
reg   [0:0] p_Result_9_reg_1313;
reg   [0:0] p_Result_9_reg_1313_pp0_iter8_reg;
reg   [58:0] trunc_ln2_reg_1323;
reg   [58:0] trunc_ln2_reg_1323_pp0_iter8_reg;
reg   [58:0] trunc_ln2_reg_1323_pp0_iter9_reg;
reg   [58:0] trunc_ln2_reg_1323_pp0_iter10_reg;
reg   [58:0] trunc_ln2_reg_1323_pp0_iter11_reg;
reg   [58:0] trunc_ln2_reg_1323_pp0_iter12_reg;
reg   [58:0] trunc_ln2_reg_1323_pp0_iter13_reg;
reg   [58:0] trunc_ln2_reg_1323_pp0_iter14_reg;
reg   [58:0] trunc_ln2_reg_1323_pp0_iter15_reg;
wire   [0:0] icmp_ln657_fu_552_p2;
reg   [0:0] icmp_ln657_reg_1328;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter8_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter9_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter10_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter11_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter12_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter13_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter14_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter15_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter16_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter17_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter18_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter19_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter20_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter21_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter22_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter23_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter24_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter25_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter26_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter27_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter28_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter29_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter30_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter31_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter32_reg;
reg   [0:0] icmp_ln657_reg_1328_pp0_iter33_reg;
wire   [0:0] icmp_ln1453_fu_557_p2;
reg   [0:0] icmp_ln1453_reg_1333;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter8_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter9_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter10_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter11_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter12_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter13_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter14_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter15_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter16_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter17_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter18_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter19_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter20_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter21_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter22_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter23_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter24_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter25_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter26_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter27_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter28_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter29_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter30_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter31_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter32_reg;
reg   [0:0] icmp_ln1453_reg_1333_pp0_iter33_reg;
wire  signed [12:0] ret_V_8_fu_613_p3;
reg  signed [12:0] ret_V_8_reg_1343;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter11_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter12_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter13_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter14_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter15_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter16_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter17_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter18_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter19_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter20_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter21_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter22_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter23_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter24_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter25_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter26_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter27_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter28_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter29_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter30_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter31_reg;
reg  signed [12:0] ret_V_8_reg_1343_pp0_iter32_reg;
reg   [58:0] trunc_ln657_1_reg_1355;
reg   [7:0] m_diff_hi_V_reg_1360;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter17_reg;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter18_reg;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter19_reg;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter20_reg;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter21_reg;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter22_reg;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter23_reg;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter24_reg;
reg   [7:0] m_diff_hi_V_reg_1360_pp0_iter25_reg;
reg   [7:0] Z2_V_reg_1365;
reg   [7:0] Z2_V_reg_1365_pp0_iter17_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter18_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter19_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter20_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter21_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter22_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter23_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter24_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter25_reg;
reg   [7:0] Z2_V_reg_1365_pp0_iter26_reg;
wire   [7:0] Z3_V_fu_664_p4;
reg   [7:0] Z3_V_reg_1372;
reg   [7:0] Z3_V_reg_1372_pp0_iter17_reg;
wire   [34:0] Z4_fu_674_p1;
reg   [34:0] Z4_reg_1377;
wire   [35:0] ret_V_9_fu_715_p2;
reg   [35:0] ret_V_9_reg_1392;
reg   [35:0] ret_V_9_reg_1392_pp0_iter18_reg;
reg   [35:0] ret_V_9_reg_1392_pp0_iter19_reg;
reg   [35:0] ret_V_9_reg_1392_pp0_iter20_reg;
reg   [25:0] f_Z3_reg_1398;
wire   [42:0] ret_V_10_fu_721_p4;
reg   [42:0] ret_V_10_reg_1403;
reg   [42:0] ret_V_10_reg_1403_pp0_iter19_reg;
reg   [42:0] ret_V_10_reg_1403_pp0_iter20_reg;
reg   [19:0] trunc_ln657_4_reg_1418;
wire   [43:0] exp_Z2P_m_1_V_fu_771_p2;
reg   [43:0] exp_Z2P_m_1_V_reg_1428;
reg   [43:0] exp_Z2P_m_1_V_reg_1428_pp0_iter22_reg;
reg   [43:0] exp_Z2P_m_1_V_reg_1428_pp0_iter23_reg;
reg   [43:0] exp_Z2P_m_1_V_reg_1428_pp0_iter24_reg;
reg   [43:0] exp_Z2P_m_1_V_reg_1428_pp0_iter25_reg;
reg   [43:0] exp_Z2P_m_1_V_reg_1428_pp0_iter26_reg;
reg   [39:0] tmp_4_reg_1434;
reg   [39:0] tmp_4_reg_1434_pp0_iter22_reg;
reg   [39:0] tmp_4_reg_1434_pp0_iter23_reg;
reg   [39:0] tmp_4_reg_1434_pp0_iter24_reg;
reg   [39:0] tmp_4_reg_1434_pp0_iter25_reg;
reg   [39:0] tmp_4_reg_1434_pp0_iter26_reg;
reg   [35:0] trunc_ln657_5_reg_1455;
reg   [57:0] exp_Z1_V_reg_1460;
reg   [57:0] exp_Z1_V_reg_1460_pp0_iter28_reg;
reg   [57:0] exp_Z1_V_reg_1460_pp0_iter29_reg;
reg   [57:0] exp_Z1_V_reg_1460_pp0_iter30_reg;
reg   [57:0] exp_Z1_V_reg_1460_pp0_iter31_reg;
reg   [49:0] exp_Z1P_m_1_V_reg_1465;
reg   [49:0] exp_Z1_hi_V_reg_1470;
wire   [57:0] ret_V_11_fu_886_p2;
reg   [57:0] ret_V_11_reg_1485;
wire   [99:0] grp_fu_880_p2;
reg   [99:0] r_V_19_reg_1490;
wire   [56:0] trunc_ln1146_fu_891_p1;
reg   [56:0] trunc_ln1146_reg_1497;
wire   [55:0] trunc_ln1146_2_fu_895_p1;
reg   [55:0] trunc_ln1146_2_reg_1502;
wire   [104:0] add_ln1146_1_fu_935_p2;
reg   [104:0] add_ln1146_1_reg_1507;
wire   [105:0] add_ln1146_2_fu_941_p2;
reg   [105:0] add_ln1146_2_reg_1512;
wire   [0:0] tmp_11_fu_947_p3;
reg   [0:0] tmp_11_reg_1517;
wire   [12:0] r_exp_V_2_fu_960_p3;
reg   [12:0] r_exp_V_2_reg_1522;
wire   [0:0] icmp_ln840_fu_977_p2;
reg   [0:0] icmp_ln840_reg_1527;
wire   [10:0] trunc_ln167_fu_983_p1;
reg   [10:0] trunc_ln167_reg_1532;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln488_1_fu_688_p1;
wire   [63:0] zext_ln488_2_fu_693_p1;
wire   [63:0] zext_ln488_3_fu_752_p1;
wire   [63:0] zext_ln488_fu_808_p1;
wire   [63:0] data_V_fu_263_p1;
wire   [51:0] tmp_17_fu_285_p1;
wire   [53:0] p_Result_8_fu_295_p3;
wire   [53:0] e_frac_V_1_fu_303_p2;
wire   [66:0] grp_fu_320_p1;
wire   [11:0] zext_ln510_fu_326_p1;
wire  signed [10:0] sub_ln1311_fu_356_p2;
wire  signed [11:0] sext_ln1311_fu_361_p1;
wire   [11:0] ush_fu_365_p3;
wire   [119:0] sh_prom_i_i366_cast_cast_castcast_fu_381_p1;
wire   [119:0] r_V_fu_385_p2;
wire   [130:0] sh_prom_i_i366_cast_cast_cast_cast_fu_377_p1;
wire   [130:0] r_V_1_fu_394_p2;
wire  signed [129:0] sext_ln1286_fu_390_p1;
wire   [129:0] trunc_ln1286_1_fu_400_p1;
wire   [0:0] isNeg_1_fu_412_p3;
wire   [11:0] ush_2_fu_420_p3;
wire  signed [31:0] sext_ln1253_1_fu_428_p1;
wire   [130:0] zext_ln1253_1_fu_432_p1;
wire   [130:0] r_V_6_fu_436_p2;
wire   [119:0] sext_ln1253_1cast_fu_446_p1;
wire   [119:0] r_V_7_fu_450_p2;
wire   [129:0] trunc_ln1252_fu_442_p1;
wire  signed [129:0] sext_ln1252_fu_455_p1;
wire   [129:0] sh_prom_i_i347_cast_cast_cast_cast_fu_470_p1;
wire   [129:0] r_V_2_fu_473_p2;
wire   [129:0] r_V_3_fu_478_p2;
wire  signed [31:0] sext_ln1253_fu_497_p1;
wire   [130:0] zext_ln1253_fu_500_p1;
wire   [130:0] r_V_5_fu_504_p2;
wire   [0:0] tmp_7_fu_490_p3;
wire   [129:0] trunc_ln1286_2_fu_509_p1;
wire   [129:0] select_ln578_fu_513_p3;
wire  signed [15:0] m_fix_hi_V_fu_520_p4;
wire   [129:0] r_V_17_fu_483_p3;
wire  signed [129:0] sext_ln568_1_fu_467_p1;
wire  signed [18:0] rhs_fu_563_p3;
wire  signed [30:0] grp_fu_1217_p3;
wire   [17:0] trunc_ln805_fu_590_p1;
wire   [12:0] ret_V_cast_fu_574_p4;
wire   [0:0] icmp_ln805_fu_593_p2;
wire   [12:0] ret_V_fu_599_p2;
wire   [0:0] p_Result_s_fu_583_p3;
wire   [12:0] select_ln804_fu_605_p3;
wire   [70:0] grp_fu_624_p2;
wire   [58:0] m_diff_V_fu_640_p2;
wire   [7:0] Z4_ind_fu_678_p4;
wire   [9:0] r_fu_698_p4;
wire   [35:0] zext_ln657_fu_708_p1;
wire   [35:0] zext_ln657_1_fu_711_p1;
wire   [42:0] grp_fu_736_p0;
wire   [35:0] grp_fu_736_p1;
wire   [78:0] grp_fu_736_p2;
wire   [35:0] zext_ln657_2_fu_759_p1;
wire   [35:0] add_ln657_fu_762_p2;
wire   [43:0] zext_ln657_3_fu_767_p1;
wire   [43:0] zext_ln1146_fu_756_p1;
wire   [48:0] exp_Z2_m_1_V_fu_787_p4;
wire   [48:0] grp_fu_802_p0;
wire   [43:0] grp_fu_802_p1;
wire   [92:0] grp_fu_802_p2;
wire   [50:0] lhs_V_1_fu_822_p5;
wire   [43:0] zext_ln657_4_fu_836_p1;
wire   [43:0] add_ln657_2_fu_839_p2;
wire   [51:0] zext_ln657_5_fu_844_p1;
wire   [51:0] zext_ln1146_1_fu_832_p1;
wire   [51:0] exp_Z1P_m_1_l_V_fu_848_p2;
wire   [49:0] grp_fu_880_p0;
wire   [49:0] grp_fu_880_p1;
wire   [106:0] lhs_V_4_fu_899_p3;
wire   [106:0] zext_ln1146_2_fu_906_p1;
wire   [104:0] trunc_ln1146_1_fu_922_p3;
wire   [104:0] zext_ln1146_4_fu_919_p1;
wire   [105:0] trunc_ln3_fu_912_p3;
wire   [105:0] zext_ln1146_3_fu_909_p1;
wire   [106:0] ret_V_6_fu_929_p2;
wire   [12:0] r_exp_V_fu_955_p2;
wire   [2:0] tmp_13_fu_967_p4;
wire   [0:0] xor_ln828_fu_991_p2;
wire   [0:0] y_is_NaN_fu_996_p2;
wire   [0:0] y_is_inf_fu_987_p2;
wire   [0:0] and_ln657_fu_1023_p2;
wire   [0:0] tmp_14_fu_1032_p3;
wire   [51:0] tmp_fu_1052_p4;
wire   [51:0] tmp_1_fu_1061_p4;
wire   [10:0] out_exp_V_fu_1077_p2;
wire   [51:0] tmp_18_fu_1070_p3;
wire   [63:0] p_Result_10_fu_1082_p4;
wire   [0:0] or_ln407_fu_1001_p2;
wire   [0:0] xor_ln460_fu_1102_p2;
wire   [0:0] and_ln467_fu_1018_p2;
wire   [0:0] xor_ln407_fu_1096_p2;
wire   [0:0] xor_ln467_fu_1113_p2;
wire   [0:0] and_ln467_1_fu_1119_p2;
wire   [0:0] or_ln460_fu_1108_p2;
wire   [0:0] and_ln467_2_fu_1125_p2;
wire   [0:0] or_ln657_fu_1027_p2;
wire   [0:0] and_ln657_1_fu_1131_p2;
wire   [63:0] select_ln658_fu_1039_p3;
wire   [63:0] bitcast_ln521_fu_1092_p1;
wire   [63:0] select_ln407_fu_1006_p3;
wire   [63:0] select_ln657_fu_1137_p3;
wire   [0:0] xor_ln964_fu_1013_p2;
wire   [0:0] and_ln460_fu_1153_p2;
wire   [0:0] icmp_ln844_fu_1047_p2;
wire   [0:0] xor_ln657_fu_1171_p2;
wire   [0:0] and_ln844_fu_1177_p2;
wire   [0:0] and_ln844_1_fu_1183_p2;
wire   [0:0] and_ln467_3_fu_1165_p2;
wire   [0:0] or_ln844_fu_1189_p2;
wire   [0:0] and_ln460_1_fu_1159_p2;
wire   [0:0] or_ln844_1_fu_1203_p2;
wire   [63:0] select_ln844_1_fu_1195_p3;
wire   [63:0] select_ln407_1_fu_1145_p3;
wire   [15:0] grp_fu_1217_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to33;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [78:0] grp_fu_736_p00;
wire   [78:0] grp_fu_736_p10;
wire   [92:0] grp_fu_802_p00;
wire   [92:0] grp_fu_802_p10;
wire   [99:0] grp_fu_880_p00;
wire   [99:0] grp_fu_880_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
end

dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58bkb #(
    .DataWidth( 58 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0),
    .ce0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0),
    .q0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0)
);

dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0cud #(
    .DataWidth( 26 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0),
    .ce0(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0),
    .q0(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0),
    .address1(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1),
    .ce1(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1),
    .q1(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1)
);

dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0dEe #(
    .DataWidth( 42 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0),
    .ce0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0),
    .q0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0)
);

dnn_mul_54s_67ns_120_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 67 ),
    .dout_WIDTH( 120 ))
mul_54s_67ns_120_5_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(e_frac_V_2_reg_1249),
    .din1(grp_fu_320_p1),
    .ce(1'b1),
    .dout(grp_fu_320_p2)
);

dnn_mul_13s_71s_71_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 71 ),
    .dout_WIDTH( 71 ))
mul_13s_71s_71_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_8_reg_1343),
    .din1(71'd1636647506585939924452),
    .ce(1'b1),
    .dout(grp_fu_624_p2)
);

dnn_mul_43ns_36ns_79_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 43 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 79 ))
mul_43ns_36ns_79_3_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_736_p0),
    .din1(grp_fu_736_p1),
    .ce(1'b1),
    .dout(grp_fu_736_p2)
);

dnn_mul_49ns_44ns_93_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 93 ))
mul_49ns_44ns_93_5_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_802_p0),
    .din1(grp_fu_802_p1),
    .ce(1'b1),
    .dout(grp_fu_802_p2)
);

dnn_mul_50ns_50ns_100_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 100 ))
mul_50ns_50ns_100_5_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_880_p0),
    .din1(grp_fu_880_p1),
    .ce(1'b1),
    .dout(grp_fu_880_p2)
);

dnn_mac_muladd_16s_16ns_19s_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 31 ))
mac_muladd_16s_16ns_19s_31_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m_fix_hi_V_fu_520_p4),
    .din1(grp_fu_1217_p1),
    .din2(rhs_fu_563_p3),
    .ce(1'b1),
    .dout(grp_fu_1217_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Z2_V_reg_1365 <= {{m_diff_V_fu_640_p2[50:43]}};
        Z2_V_reg_1365_pp0_iter17_reg <= Z2_V_reg_1365;
        Z2_V_reg_1365_pp0_iter18_reg <= Z2_V_reg_1365_pp0_iter17_reg;
        Z2_V_reg_1365_pp0_iter19_reg <= Z2_V_reg_1365_pp0_iter18_reg;
        Z2_V_reg_1365_pp0_iter20_reg <= Z2_V_reg_1365_pp0_iter19_reg;
        Z2_V_reg_1365_pp0_iter21_reg <= Z2_V_reg_1365_pp0_iter20_reg;
        Z2_V_reg_1365_pp0_iter22_reg <= Z2_V_reg_1365_pp0_iter21_reg;
        Z2_V_reg_1365_pp0_iter23_reg <= Z2_V_reg_1365_pp0_iter22_reg;
        Z2_V_reg_1365_pp0_iter24_reg <= Z2_V_reg_1365_pp0_iter23_reg;
        Z2_V_reg_1365_pp0_iter25_reg <= Z2_V_reg_1365_pp0_iter24_reg;
        Z2_V_reg_1365_pp0_iter26_reg <= Z2_V_reg_1365_pp0_iter25_reg;
        Z3_V_reg_1372 <= {{m_diff_V_fu_640_p2[42:35]}};
        Z3_V_reg_1372_pp0_iter17_reg <= Z3_V_reg_1372;
        Z4_reg_1377 <= Z4_fu_674_p1;
        add_ln1146_1_reg_1507 <= add_ln1146_1_fu_935_p2;
        add_ln1146_2_reg_1512 <= add_ln1146_2_fu_941_p2;
        exp_Z1P_m_1_V_reg_1465 <= {{exp_Z1P_m_1_l_V_fu_848_p2[51:2]}};
        exp_Z1_V_reg_1460 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
        exp_Z1_V_reg_1460_pp0_iter28_reg <= exp_Z1_V_reg_1460;
        exp_Z1_V_reg_1460_pp0_iter29_reg <= exp_Z1_V_reg_1460_pp0_iter28_reg;
        exp_Z1_V_reg_1460_pp0_iter30_reg <= exp_Z1_V_reg_1460_pp0_iter29_reg;
        exp_Z1_V_reg_1460_pp0_iter31_reg <= exp_Z1_V_reg_1460_pp0_iter30_reg;
        exp_Z1_hi_V_reg_1470 <= {{pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0[57:8]}};
        exp_Z2P_m_1_V_reg_1428 <= exp_Z2P_m_1_V_fu_771_p2;
        exp_Z2P_m_1_V_reg_1428_pp0_iter22_reg <= exp_Z2P_m_1_V_reg_1428;
        exp_Z2P_m_1_V_reg_1428_pp0_iter23_reg <= exp_Z2P_m_1_V_reg_1428_pp0_iter22_reg;
        exp_Z2P_m_1_V_reg_1428_pp0_iter24_reg <= exp_Z2P_m_1_V_reg_1428_pp0_iter23_reg;
        exp_Z2P_m_1_V_reg_1428_pp0_iter25_reg <= exp_Z2P_m_1_V_reg_1428_pp0_iter24_reg;
        exp_Z2P_m_1_V_reg_1428_pp0_iter26_reg <= exp_Z2P_m_1_V_reg_1428_pp0_iter25_reg;
        icmp_ln1453_reg_1333 <= icmp_ln1453_fu_557_p2;
        icmp_ln1453_reg_1333_pp0_iter10_reg <= icmp_ln1453_reg_1333_pp0_iter9_reg;
        icmp_ln1453_reg_1333_pp0_iter11_reg <= icmp_ln1453_reg_1333_pp0_iter10_reg;
        icmp_ln1453_reg_1333_pp0_iter12_reg <= icmp_ln1453_reg_1333_pp0_iter11_reg;
        icmp_ln1453_reg_1333_pp0_iter13_reg <= icmp_ln1453_reg_1333_pp0_iter12_reg;
        icmp_ln1453_reg_1333_pp0_iter14_reg <= icmp_ln1453_reg_1333_pp0_iter13_reg;
        icmp_ln1453_reg_1333_pp0_iter15_reg <= icmp_ln1453_reg_1333_pp0_iter14_reg;
        icmp_ln1453_reg_1333_pp0_iter16_reg <= icmp_ln1453_reg_1333_pp0_iter15_reg;
        icmp_ln1453_reg_1333_pp0_iter17_reg <= icmp_ln1453_reg_1333_pp0_iter16_reg;
        icmp_ln1453_reg_1333_pp0_iter18_reg <= icmp_ln1453_reg_1333_pp0_iter17_reg;
        icmp_ln1453_reg_1333_pp0_iter19_reg <= icmp_ln1453_reg_1333_pp0_iter18_reg;
        icmp_ln1453_reg_1333_pp0_iter20_reg <= icmp_ln1453_reg_1333_pp0_iter19_reg;
        icmp_ln1453_reg_1333_pp0_iter21_reg <= icmp_ln1453_reg_1333_pp0_iter20_reg;
        icmp_ln1453_reg_1333_pp0_iter22_reg <= icmp_ln1453_reg_1333_pp0_iter21_reg;
        icmp_ln1453_reg_1333_pp0_iter23_reg <= icmp_ln1453_reg_1333_pp0_iter22_reg;
        icmp_ln1453_reg_1333_pp0_iter24_reg <= icmp_ln1453_reg_1333_pp0_iter23_reg;
        icmp_ln1453_reg_1333_pp0_iter25_reg <= icmp_ln1453_reg_1333_pp0_iter24_reg;
        icmp_ln1453_reg_1333_pp0_iter26_reg <= icmp_ln1453_reg_1333_pp0_iter25_reg;
        icmp_ln1453_reg_1333_pp0_iter27_reg <= icmp_ln1453_reg_1333_pp0_iter26_reg;
        icmp_ln1453_reg_1333_pp0_iter28_reg <= icmp_ln1453_reg_1333_pp0_iter27_reg;
        icmp_ln1453_reg_1333_pp0_iter29_reg <= icmp_ln1453_reg_1333_pp0_iter28_reg;
        icmp_ln1453_reg_1333_pp0_iter30_reg <= icmp_ln1453_reg_1333_pp0_iter29_reg;
        icmp_ln1453_reg_1333_pp0_iter31_reg <= icmp_ln1453_reg_1333_pp0_iter30_reg;
        icmp_ln1453_reg_1333_pp0_iter32_reg <= icmp_ln1453_reg_1333_pp0_iter31_reg;
        icmp_ln1453_reg_1333_pp0_iter33_reg <= icmp_ln1453_reg_1333_pp0_iter32_reg;
        icmp_ln1453_reg_1333_pp0_iter8_reg <= icmp_ln1453_reg_1333;
        icmp_ln1453_reg_1333_pp0_iter9_reg <= icmp_ln1453_reg_1333_pp0_iter8_reg;
        icmp_ln657_reg_1328 <= icmp_ln657_fu_552_p2;
        icmp_ln657_reg_1328_pp0_iter10_reg <= icmp_ln657_reg_1328_pp0_iter9_reg;
        icmp_ln657_reg_1328_pp0_iter11_reg <= icmp_ln657_reg_1328_pp0_iter10_reg;
        icmp_ln657_reg_1328_pp0_iter12_reg <= icmp_ln657_reg_1328_pp0_iter11_reg;
        icmp_ln657_reg_1328_pp0_iter13_reg <= icmp_ln657_reg_1328_pp0_iter12_reg;
        icmp_ln657_reg_1328_pp0_iter14_reg <= icmp_ln657_reg_1328_pp0_iter13_reg;
        icmp_ln657_reg_1328_pp0_iter15_reg <= icmp_ln657_reg_1328_pp0_iter14_reg;
        icmp_ln657_reg_1328_pp0_iter16_reg <= icmp_ln657_reg_1328_pp0_iter15_reg;
        icmp_ln657_reg_1328_pp0_iter17_reg <= icmp_ln657_reg_1328_pp0_iter16_reg;
        icmp_ln657_reg_1328_pp0_iter18_reg <= icmp_ln657_reg_1328_pp0_iter17_reg;
        icmp_ln657_reg_1328_pp0_iter19_reg <= icmp_ln657_reg_1328_pp0_iter18_reg;
        icmp_ln657_reg_1328_pp0_iter20_reg <= icmp_ln657_reg_1328_pp0_iter19_reg;
        icmp_ln657_reg_1328_pp0_iter21_reg <= icmp_ln657_reg_1328_pp0_iter20_reg;
        icmp_ln657_reg_1328_pp0_iter22_reg <= icmp_ln657_reg_1328_pp0_iter21_reg;
        icmp_ln657_reg_1328_pp0_iter23_reg <= icmp_ln657_reg_1328_pp0_iter22_reg;
        icmp_ln657_reg_1328_pp0_iter24_reg <= icmp_ln657_reg_1328_pp0_iter23_reg;
        icmp_ln657_reg_1328_pp0_iter25_reg <= icmp_ln657_reg_1328_pp0_iter24_reg;
        icmp_ln657_reg_1328_pp0_iter26_reg <= icmp_ln657_reg_1328_pp0_iter25_reg;
        icmp_ln657_reg_1328_pp0_iter27_reg <= icmp_ln657_reg_1328_pp0_iter26_reg;
        icmp_ln657_reg_1328_pp0_iter28_reg <= icmp_ln657_reg_1328_pp0_iter27_reg;
        icmp_ln657_reg_1328_pp0_iter29_reg <= icmp_ln657_reg_1328_pp0_iter28_reg;
        icmp_ln657_reg_1328_pp0_iter30_reg <= icmp_ln657_reg_1328_pp0_iter29_reg;
        icmp_ln657_reg_1328_pp0_iter31_reg <= icmp_ln657_reg_1328_pp0_iter30_reg;
        icmp_ln657_reg_1328_pp0_iter32_reg <= icmp_ln657_reg_1328_pp0_iter31_reg;
        icmp_ln657_reg_1328_pp0_iter33_reg <= icmp_ln657_reg_1328_pp0_iter32_reg;
        icmp_ln657_reg_1328_pp0_iter8_reg <= icmp_ln657_reg_1328;
        icmp_ln657_reg_1328_pp0_iter9_reg <= icmp_ln657_reg_1328_pp0_iter8_reg;
        icmp_ln824_1_reg_1243_pp0_iter10_reg <= icmp_ln824_1_reg_1243_pp0_iter9_reg;
        icmp_ln824_1_reg_1243_pp0_iter11_reg <= icmp_ln824_1_reg_1243_pp0_iter10_reg;
        icmp_ln824_1_reg_1243_pp0_iter12_reg <= icmp_ln824_1_reg_1243_pp0_iter11_reg;
        icmp_ln824_1_reg_1243_pp0_iter13_reg <= icmp_ln824_1_reg_1243_pp0_iter12_reg;
        icmp_ln824_1_reg_1243_pp0_iter14_reg <= icmp_ln824_1_reg_1243_pp0_iter13_reg;
        icmp_ln824_1_reg_1243_pp0_iter15_reg <= icmp_ln824_1_reg_1243_pp0_iter14_reg;
        icmp_ln824_1_reg_1243_pp0_iter16_reg <= icmp_ln824_1_reg_1243_pp0_iter15_reg;
        icmp_ln824_1_reg_1243_pp0_iter17_reg <= icmp_ln824_1_reg_1243_pp0_iter16_reg;
        icmp_ln824_1_reg_1243_pp0_iter18_reg <= icmp_ln824_1_reg_1243_pp0_iter17_reg;
        icmp_ln824_1_reg_1243_pp0_iter19_reg <= icmp_ln824_1_reg_1243_pp0_iter18_reg;
        icmp_ln824_1_reg_1243_pp0_iter20_reg <= icmp_ln824_1_reg_1243_pp0_iter19_reg;
        icmp_ln824_1_reg_1243_pp0_iter21_reg <= icmp_ln824_1_reg_1243_pp0_iter20_reg;
        icmp_ln824_1_reg_1243_pp0_iter22_reg <= icmp_ln824_1_reg_1243_pp0_iter21_reg;
        icmp_ln824_1_reg_1243_pp0_iter23_reg <= icmp_ln824_1_reg_1243_pp0_iter22_reg;
        icmp_ln824_1_reg_1243_pp0_iter24_reg <= icmp_ln824_1_reg_1243_pp0_iter23_reg;
        icmp_ln824_1_reg_1243_pp0_iter25_reg <= icmp_ln824_1_reg_1243_pp0_iter24_reg;
        icmp_ln824_1_reg_1243_pp0_iter26_reg <= icmp_ln824_1_reg_1243_pp0_iter25_reg;
        icmp_ln824_1_reg_1243_pp0_iter27_reg <= icmp_ln824_1_reg_1243_pp0_iter26_reg;
        icmp_ln824_1_reg_1243_pp0_iter28_reg <= icmp_ln824_1_reg_1243_pp0_iter27_reg;
        icmp_ln824_1_reg_1243_pp0_iter29_reg <= icmp_ln824_1_reg_1243_pp0_iter28_reg;
        icmp_ln824_1_reg_1243_pp0_iter2_reg <= icmp_ln824_1_reg_1243_pp0_iter1_reg;
        icmp_ln824_1_reg_1243_pp0_iter30_reg <= icmp_ln824_1_reg_1243_pp0_iter29_reg;
        icmp_ln824_1_reg_1243_pp0_iter31_reg <= icmp_ln824_1_reg_1243_pp0_iter30_reg;
        icmp_ln824_1_reg_1243_pp0_iter32_reg <= icmp_ln824_1_reg_1243_pp0_iter31_reg;
        icmp_ln824_1_reg_1243_pp0_iter33_reg <= icmp_ln824_1_reg_1243_pp0_iter32_reg;
        icmp_ln824_1_reg_1243_pp0_iter3_reg <= icmp_ln824_1_reg_1243_pp0_iter2_reg;
        icmp_ln824_1_reg_1243_pp0_iter4_reg <= icmp_ln824_1_reg_1243_pp0_iter3_reg;
        icmp_ln824_1_reg_1243_pp0_iter5_reg <= icmp_ln824_1_reg_1243_pp0_iter4_reg;
        icmp_ln824_1_reg_1243_pp0_iter6_reg <= icmp_ln824_1_reg_1243_pp0_iter5_reg;
        icmp_ln824_1_reg_1243_pp0_iter7_reg <= icmp_ln824_1_reg_1243_pp0_iter6_reg;
        icmp_ln824_1_reg_1243_pp0_iter8_reg <= icmp_ln824_1_reg_1243_pp0_iter7_reg;
        icmp_ln824_1_reg_1243_pp0_iter9_reg <= icmp_ln824_1_reg_1243_pp0_iter8_reg;
        icmp_ln824_reg_1281 <= icmp_ln824_fu_340_p2;
        icmp_ln824_reg_1281_pp0_iter10_reg <= icmp_ln824_reg_1281_pp0_iter9_reg;
        icmp_ln824_reg_1281_pp0_iter11_reg <= icmp_ln824_reg_1281_pp0_iter10_reg;
        icmp_ln824_reg_1281_pp0_iter12_reg <= icmp_ln824_reg_1281_pp0_iter11_reg;
        icmp_ln824_reg_1281_pp0_iter13_reg <= icmp_ln824_reg_1281_pp0_iter12_reg;
        icmp_ln824_reg_1281_pp0_iter14_reg <= icmp_ln824_reg_1281_pp0_iter13_reg;
        icmp_ln824_reg_1281_pp0_iter15_reg <= icmp_ln824_reg_1281_pp0_iter14_reg;
        icmp_ln824_reg_1281_pp0_iter16_reg <= icmp_ln824_reg_1281_pp0_iter15_reg;
        icmp_ln824_reg_1281_pp0_iter17_reg <= icmp_ln824_reg_1281_pp0_iter16_reg;
        icmp_ln824_reg_1281_pp0_iter18_reg <= icmp_ln824_reg_1281_pp0_iter17_reg;
        icmp_ln824_reg_1281_pp0_iter19_reg <= icmp_ln824_reg_1281_pp0_iter18_reg;
        icmp_ln824_reg_1281_pp0_iter20_reg <= icmp_ln824_reg_1281_pp0_iter19_reg;
        icmp_ln824_reg_1281_pp0_iter21_reg <= icmp_ln824_reg_1281_pp0_iter20_reg;
        icmp_ln824_reg_1281_pp0_iter22_reg <= icmp_ln824_reg_1281_pp0_iter21_reg;
        icmp_ln824_reg_1281_pp0_iter23_reg <= icmp_ln824_reg_1281_pp0_iter22_reg;
        icmp_ln824_reg_1281_pp0_iter24_reg <= icmp_ln824_reg_1281_pp0_iter23_reg;
        icmp_ln824_reg_1281_pp0_iter25_reg <= icmp_ln824_reg_1281_pp0_iter24_reg;
        icmp_ln824_reg_1281_pp0_iter26_reg <= icmp_ln824_reg_1281_pp0_iter25_reg;
        icmp_ln824_reg_1281_pp0_iter27_reg <= icmp_ln824_reg_1281_pp0_iter26_reg;
        icmp_ln824_reg_1281_pp0_iter28_reg <= icmp_ln824_reg_1281_pp0_iter27_reg;
        icmp_ln824_reg_1281_pp0_iter29_reg <= icmp_ln824_reg_1281_pp0_iter28_reg;
        icmp_ln824_reg_1281_pp0_iter30_reg <= icmp_ln824_reg_1281_pp0_iter29_reg;
        icmp_ln824_reg_1281_pp0_iter31_reg <= icmp_ln824_reg_1281_pp0_iter30_reg;
        icmp_ln824_reg_1281_pp0_iter32_reg <= icmp_ln824_reg_1281_pp0_iter31_reg;
        icmp_ln824_reg_1281_pp0_iter33_reg <= icmp_ln824_reg_1281_pp0_iter32_reg;
        icmp_ln824_reg_1281_pp0_iter7_reg <= icmp_ln824_reg_1281;
        icmp_ln824_reg_1281_pp0_iter8_reg <= icmp_ln824_reg_1281_pp0_iter7_reg;
        icmp_ln824_reg_1281_pp0_iter9_reg <= icmp_ln824_reg_1281_pp0_iter8_reg;
        icmp_ln840_reg_1527 <= icmp_ln840_fu_977_p2;
        isNeg_reg_1292 <= m_exp_fu_329_p2[32'd11];
        m_diff_hi_V_reg_1360 <= {{m_diff_V_fu_640_p2[58:51]}};
        m_diff_hi_V_reg_1360_pp0_iter17_reg <= m_diff_hi_V_reg_1360;
        m_diff_hi_V_reg_1360_pp0_iter18_reg <= m_diff_hi_V_reg_1360_pp0_iter17_reg;
        m_diff_hi_V_reg_1360_pp0_iter19_reg <= m_diff_hi_V_reg_1360_pp0_iter18_reg;
        m_diff_hi_V_reg_1360_pp0_iter20_reg <= m_diff_hi_V_reg_1360_pp0_iter19_reg;
        m_diff_hi_V_reg_1360_pp0_iter21_reg <= m_diff_hi_V_reg_1360_pp0_iter20_reg;
        m_diff_hi_V_reg_1360_pp0_iter22_reg <= m_diff_hi_V_reg_1360_pp0_iter21_reg;
        m_diff_hi_V_reg_1360_pp0_iter23_reg <= m_diff_hi_V_reg_1360_pp0_iter22_reg;
        m_diff_hi_V_reg_1360_pp0_iter24_reg <= m_diff_hi_V_reg_1360_pp0_iter23_reg;
        m_diff_hi_V_reg_1360_pp0_iter25_reg <= m_diff_hi_V_reg_1360_pp0_iter24_reg;
        m_exp_reg_1268 <= m_exp_fu_329_p2;
        m_fix_l_reg_1302 <= m_fix_l_fu_404_p3;
        m_frac_l_V_reg_1259 <= grp_fu_320_p2;
        m_frac_l_V_reg_1259_pp0_iter10_reg <= m_frac_l_V_reg_1259_pp0_iter9_reg;
        m_frac_l_V_reg_1259_pp0_iter11_reg <= m_frac_l_V_reg_1259_pp0_iter10_reg;
        m_frac_l_V_reg_1259_pp0_iter12_reg <= m_frac_l_V_reg_1259_pp0_iter11_reg;
        m_frac_l_V_reg_1259_pp0_iter13_reg <= m_frac_l_V_reg_1259_pp0_iter12_reg;
        m_frac_l_V_reg_1259_pp0_iter14_reg <= m_frac_l_V_reg_1259_pp0_iter13_reg;
        m_frac_l_V_reg_1259_pp0_iter15_reg <= m_frac_l_V_reg_1259_pp0_iter14_reg;
        m_frac_l_V_reg_1259_pp0_iter16_reg <= m_frac_l_V_reg_1259_pp0_iter15_reg;
        m_frac_l_V_reg_1259_pp0_iter17_reg <= m_frac_l_V_reg_1259_pp0_iter16_reg;
        m_frac_l_V_reg_1259_pp0_iter18_reg <= m_frac_l_V_reg_1259_pp0_iter17_reg;
        m_frac_l_V_reg_1259_pp0_iter19_reg <= m_frac_l_V_reg_1259_pp0_iter18_reg;
        m_frac_l_V_reg_1259_pp0_iter20_reg <= m_frac_l_V_reg_1259_pp0_iter19_reg;
        m_frac_l_V_reg_1259_pp0_iter21_reg <= m_frac_l_V_reg_1259_pp0_iter20_reg;
        m_frac_l_V_reg_1259_pp0_iter22_reg <= m_frac_l_V_reg_1259_pp0_iter21_reg;
        m_frac_l_V_reg_1259_pp0_iter23_reg <= m_frac_l_V_reg_1259_pp0_iter22_reg;
        m_frac_l_V_reg_1259_pp0_iter24_reg <= m_frac_l_V_reg_1259_pp0_iter23_reg;
        m_frac_l_V_reg_1259_pp0_iter25_reg <= m_frac_l_V_reg_1259_pp0_iter24_reg;
        m_frac_l_V_reg_1259_pp0_iter26_reg <= m_frac_l_V_reg_1259_pp0_iter25_reg;
        m_frac_l_V_reg_1259_pp0_iter27_reg <= m_frac_l_V_reg_1259_pp0_iter26_reg;
        m_frac_l_V_reg_1259_pp0_iter28_reg <= m_frac_l_V_reg_1259_pp0_iter27_reg;
        m_frac_l_V_reg_1259_pp0_iter29_reg <= m_frac_l_V_reg_1259_pp0_iter28_reg;
        m_frac_l_V_reg_1259_pp0_iter30_reg <= m_frac_l_V_reg_1259_pp0_iter29_reg;
        m_frac_l_V_reg_1259_pp0_iter31_reg <= m_frac_l_V_reg_1259_pp0_iter30_reg;
        m_frac_l_V_reg_1259_pp0_iter32_reg <= m_frac_l_V_reg_1259_pp0_iter31_reg;
        m_frac_l_V_reg_1259_pp0_iter33_reg <= m_frac_l_V_reg_1259_pp0_iter32_reg;
        m_frac_l_V_reg_1259_pp0_iter6_reg <= m_frac_l_V_reg_1259;
        m_frac_l_V_reg_1259_pp0_iter7_reg <= m_frac_l_V_reg_1259_pp0_iter6_reg;
        m_frac_l_V_reg_1259_pp0_iter8_reg <= m_frac_l_V_reg_1259_pp0_iter7_reg;
        m_frac_l_V_reg_1259_pp0_iter9_reg <= m_frac_l_V_reg_1259_pp0_iter8_reg;
        p_Result_7_reg_1228_pp0_iter10_reg <= p_Result_7_reg_1228_pp0_iter9_reg;
        p_Result_7_reg_1228_pp0_iter11_reg <= p_Result_7_reg_1228_pp0_iter10_reg;
        p_Result_7_reg_1228_pp0_iter12_reg <= p_Result_7_reg_1228_pp0_iter11_reg;
        p_Result_7_reg_1228_pp0_iter13_reg <= p_Result_7_reg_1228_pp0_iter12_reg;
        p_Result_7_reg_1228_pp0_iter14_reg <= p_Result_7_reg_1228_pp0_iter13_reg;
        p_Result_7_reg_1228_pp0_iter15_reg <= p_Result_7_reg_1228_pp0_iter14_reg;
        p_Result_7_reg_1228_pp0_iter16_reg <= p_Result_7_reg_1228_pp0_iter15_reg;
        p_Result_7_reg_1228_pp0_iter17_reg <= p_Result_7_reg_1228_pp0_iter16_reg;
        p_Result_7_reg_1228_pp0_iter18_reg <= p_Result_7_reg_1228_pp0_iter17_reg;
        p_Result_7_reg_1228_pp0_iter19_reg <= p_Result_7_reg_1228_pp0_iter18_reg;
        p_Result_7_reg_1228_pp0_iter20_reg <= p_Result_7_reg_1228_pp0_iter19_reg;
        p_Result_7_reg_1228_pp0_iter21_reg <= p_Result_7_reg_1228_pp0_iter20_reg;
        p_Result_7_reg_1228_pp0_iter22_reg <= p_Result_7_reg_1228_pp0_iter21_reg;
        p_Result_7_reg_1228_pp0_iter23_reg <= p_Result_7_reg_1228_pp0_iter22_reg;
        p_Result_7_reg_1228_pp0_iter24_reg <= p_Result_7_reg_1228_pp0_iter23_reg;
        p_Result_7_reg_1228_pp0_iter25_reg <= p_Result_7_reg_1228_pp0_iter24_reg;
        p_Result_7_reg_1228_pp0_iter26_reg <= p_Result_7_reg_1228_pp0_iter25_reg;
        p_Result_7_reg_1228_pp0_iter27_reg <= p_Result_7_reg_1228_pp0_iter26_reg;
        p_Result_7_reg_1228_pp0_iter28_reg <= p_Result_7_reg_1228_pp0_iter27_reg;
        p_Result_7_reg_1228_pp0_iter29_reg <= p_Result_7_reg_1228_pp0_iter28_reg;
        p_Result_7_reg_1228_pp0_iter2_reg <= p_Result_7_reg_1228_pp0_iter1_reg;
        p_Result_7_reg_1228_pp0_iter30_reg <= p_Result_7_reg_1228_pp0_iter29_reg;
        p_Result_7_reg_1228_pp0_iter31_reg <= p_Result_7_reg_1228_pp0_iter30_reg;
        p_Result_7_reg_1228_pp0_iter32_reg <= p_Result_7_reg_1228_pp0_iter31_reg;
        p_Result_7_reg_1228_pp0_iter33_reg <= p_Result_7_reg_1228_pp0_iter32_reg;
        p_Result_7_reg_1228_pp0_iter3_reg <= p_Result_7_reg_1228_pp0_iter2_reg;
        p_Result_7_reg_1228_pp0_iter4_reg <= p_Result_7_reg_1228_pp0_iter3_reg;
        p_Result_7_reg_1228_pp0_iter5_reg <= p_Result_7_reg_1228_pp0_iter4_reg;
        p_Result_7_reg_1228_pp0_iter6_reg <= p_Result_7_reg_1228_pp0_iter5_reg;
        p_Result_7_reg_1228_pp0_iter7_reg <= p_Result_7_reg_1228_pp0_iter6_reg;
        p_Result_7_reg_1228_pp0_iter8_reg <= p_Result_7_reg_1228_pp0_iter7_reg;
        p_Result_7_reg_1228_pp0_iter9_reg <= p_Result_7_reg_1228_pp0_iter8_reg;
        p_Result_9_reg_1313 <= select_ln578_fu_513_p3[32'd129];
        p_Result_9_reg_1313_pp0_iter8_reg <= p_Result_9_reg_1313;
        r_V_19_reg_1490 <= grp_fu_880_p2;
        r_V_8_reg_1308 <= r_V_8_fu_459_p3;
        r_exp_V_2_reg_1522 <= r_exp_V_2_fu_960_p3;
        ret_V_10_reg_1403[25 : 0] <= ret_V_10_fu_721_p4[25 : 0];
ret_V_10_reg_1403[42 : 35] <= ret_V_10_fu_721_p4[42 : 35];
        ret_V_10_reg_1403_pp0_iter19_reg[25 : 0] <= ret_V_10_reg_1403[25 : 0];
ret_V_10_reg_1403_pp0_iter19_reg[42 : 35] <= ret_V_10_reg_1403[42 : 35];
        ret_V_10_reg_1403_pp0_iter20_reg[25 : 0] <= ret_V_10_reg_1403_pp0_iter19_reg[25 : 0];
ret_V_10_reg_1403_pp0_iter20_reg[42 : 35] <= ret_V_10_reg_1403_pp0_iter19_reg[42 : 35];
        ret_V_11_reg_1485 <= ret_V_11_fu_886_p2;
        ret_V_8_reg_1343 <= ret_V_8_fu_613_p3;
        ret_V_8_reg_1343_pp0_iter11_reg <= ret_V_8_reg_1343;
        ret_V_8_reg_1343_pp0_iter12_reg <= ret_V_8_reg_1343_pp0_iter11_reg;
        ret_V_8_reg_1343_pp0_iter13_reg <= ret_V_8_reg_1343_pp0_iter12_reg;
        ret_V_8_reg_1343_pp0_iter14_reg <= ret_V_8_reg_1343_pp0_iter13_reg;
        ret_V_8_reg_1343_pp0_iter15_reg <= ret_V_8_reg_1343_pp0_iter14_reg;
        ret_V_8_reg_1343_pp0_iter16_reg <= ret_V_8_reg_1343_pp0_iter15_reg;
        ret_V_8_reg_1343_pp0_iter17_reg <= ret_V_8_reg_1343_pp0_iter16_reg;
        ret_V_8_reg_1343_pp0_iter18_reg <= ret_V_8_reg_1343_pp0_iter17_reg;
        ret_V_8_reg_1343_pp0_iter19_reg <= ret_V_8_reg_1343_pp0_iter18_reg;
        ret_V_8_reg_1343_pp0_iter20_reg <= ret_V_8_reg_1343_pp0_iter19_reg;
        ret_V_8_reg_1343_pp0_iter21_reg <= ret_V_8_reg_1343_pp0_iter20_reg;
        ret_V_8_reg_1343_pp0_iter22_reg <= ret_V_8_reg_1343_pp0_iter21_reg;
        ret_V_8_reg_1343_pp0_iter23_reg <= ret_V_8_reg_1343_pp0_iter22_reg;
        ret_V_8_reg_1343_pp0_iter24_reg <= ret_V_8_reg_1343_pp0_iter23_reg;
        ret_V_8_reg_1343_pp0_iter25_reg <= ret_V_8_reg_1343_pp0_iter24_reg;
        ret_V_8_reg_1343_pp0_iter26_reg <= ret_V_8_reg_1343_pp0_iter25_reg;
        ret_V_8_reg_1343_pp0_iter27_reg <= ret_V_8_reg_1343_pp0_iter26_reg;
        ret_V_8_reg_1343_pp0_iter28_reg <= ret_V_8_reg_1343_pp0_iter27_reg;
        ret_V_8_reg_1343_pp0_iter29_reg <= ret_V_8_reg_1343_pp0_iter28_reg;
        ret_V_8_reg_1343_pp0_iter30_reg <= ret_V_8_reg_1343_pp0_iter29_reg;
        ret_V_8_reg_1343_pp0_iter31_reg <= ret_V_8_reg_1343_pp0_iter30_reg;
        ret_V_8_reg_1343_pp0_iter32_reg <= ret_V_8_reg_1343_pp0_iter31_reg;
        ret_V_9_reg_1392 <= ret_V_9_fu_715_p2;
        ret_V_9_reg_1392_pp0_iter18_reg <= ret_V_9_reg_1392;
        ret_V_9_reg_1392_pp0_iter19_reg <= ret_V_9_reg_1392_pp0_iter18_reg;
        ret_V_9_reg_1392_pp0_iter20_reg <= ret_V_9_reg_1392_pp0_iter19_reg;
        sext_ln568_reg_1287 <= sext_ln568_fu_345_p1;
        sh_prom_i_i366_cast_cast_cast_reg_1297 <= sh_prom_i_i366_cast_cast_cast_fu_373_p1;
        tmp_11_reg_1517 <= ret_V_6_fu_929_p2[32'd106];
        tmp_16_reg_1235_pp0_iter2_reg <= tmp_16_reg_1235_pp0_iter1_reg;
        tmp_16_reg_1235_pp0_iter3_reg <= tmp_16_reg_1235_pp0_iter2_reg;
        tmp_16_reg_1235_pp0_iter4_reg <= tmp_16_reg_1235_pp0_iter3_reg;
        tmp_16_reg_1235_pp0_iter5_reg <= tmp_16_reg_1235_pp0_iter4_reg;
        tmp_4_reg_1434 <= {{pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0[41:2]}};
        tmp_4_reg_1434_pp0_iter22_reg <= tmp_4_reg_1434;
        tmp_4_reg_1434_pp0_iter23_reg <= tmp_4_reg_1434_pp0_iter22_reg;
        tmp_4_reg_1434_pp0_iter24_reg <= tmp_4_reg_1434_pp0_iter23_reg;
        tmp_4_reg_1434_pp0_iter25_reg <= tmp_4_reg_1434_pp0_iter24_reg;
        tmp_4_reg_1434_pp0_iter26_reg <= tmp_4_reg_1434_pp0_iter25_reg;
        trunc_ln1146_2_reg_1502 <= trunc_ln1146_2_fu_895_p1;
        trunc_ln1146_reg_1497 <= trunc_ln1146_fu_891_p1;
        trunc_ln167_reg_1532 <= trunc_ln167_fu_983_p1;
        trunc_ln2_reg_1323 <= {{select_ln578_fu_513_p3[117:59]}};
        trunc_ln2_reg_1323_pp0_iter10_reg <= trunc_ln2_reg_1323_pp0_iter9_reg;
        trunc_ln2_reg_1323_pp0_iter11_reg <= trunc_ln2_reg_1323_pp0_iter10_reg;
        trunc_ln2_reg_1323_pp0_iter12_reg <= trunc_ln2_reg_1323_pp0_iter11_reg;
        trunc_ln2_reg_1323_pp0_iter13_reg <= trunc_ln2_reg_1323_pp0_iter12_reg;
        trunc_ln2_reg_1323_pp0_iter14_reg <= trunc_ln2_reg_1323_pp0_iter13_reg;
        trunc_ln2_reg_1323_pp0_iter15_reg <= trunc_ln2_reg_1323_pp0_iter14_reg;
        trunc_ln2_reg_1323_pp0_iter8_reg <= trunc_ln2_reg_1323;
        trunc_ln2_reg_1323_pp0_iter9_reg <= trunc_ln2_reg_1323_pp0_iter8_reg;
        trunc_ln657_1_reg_1355 <= {{grp_fu_624_p2[70:12]}};
        trunc_ln657_4_reg_1418 <= {{grp_fu_736_p2[78:59]}};
        trunc_ln657_5_reg_1455 <= {{grp_fu_802_p2[92:57]}};
        y_is_0_reg_1275 <= y_is_0_fu_335_p2;
        y_is_0_reg_1275_pp0_iter10_reg <= y_is_0_reg_1275_pp0_iter9_reg;
        y_is_0_reg_1275_pp0_iter11_reg <= y_is_0_reg_1275_pp0_iter10_reg;
        y_is_0_reg_1275_pp0_iter12_reg <= y_is_0_reg_1275_pp0_iter11_reg;
        y_is_0_reg_1275_pp0_iter13_reg <= y_is_0_reg_1275_pp0_iter12_reg;
        y_is_0_reg_1275_pp0_iter14_reg <= y_is_0_reg_1275_pp0_iter13_reg;
        y_is_0_reg_1275_pp0_iter15_reg <= y_is_0_reg_1275_pp0_iter14_reg;
        y_is_0_reg_1275_pp0_iter16_reg <= y_is_0_reg_1275_pp0_iter15_reg;
        y_is_0_reg_1275_pp0_iter17_reg <= y_is_0_reg_1275_pp0_iter16_reg;
        y_is_0_reg_1275_pp0_iter18_reg <= y_is_0_reg_1275_pp0_iter17_reg;
        y_is_0_reg_1275_pp0_iter19_reg <= y_is_0_reg_1275_pp0_iter18_reg;
        y_is_0_reg_1275_pp0_iter20_reg <= y_is_0_reg_1275_pp0_iter19_reg;
        y_is_0_reg_1275_pp0_iter21_reg <= y_is_0_reg_1275_pp0_iter20_reg;
        y_is_0_reg_1275_pp0_iter22_reg <= y_is_0_reg_1275_pp0_iter21_reg;
        y_is_0_reg_1275_pp0_iter23_reg <= y_is_0_reg_1275_pp0_iter22_reg;
        y_is_0_reg_1275_pp0_iter24_reg <= y_is_0_reg_1275_pp0_iter23_reg;
        y_is_0_reg_1275_pp0_iter25_reg <= y_is_0_reg_1275_pp0_iter24_reg;
        y_is_0_reg_1275_pp0_iter26_reg <= y_is_0_reg_1275_pp0_iter25_reg;
        y_is_0_reg_1275_pp0_iter27_reg <= y_is_0_reg_1275_pp0_iter26_reg;
        y_is_0_reg_1275_pp0_iter28_reg <= y_is_0_reg_1275_pp0_iter27_reg;
        y_is_0_reg_1275_pp0_iter29_reg <= y_is_0_reg_1275_pp0_iter28_reg;
        y_is_0_reg_1275_pp0_iter30_reg <= y_is_0_reg_1275_pp0_iter29_reg;
        y_is_0_reg_1275_pp0_iter31_reg <= y_is_0_reg_1275_pp0_iter30_reg;
        y_is_0_reg_1275_pp0_iter32_reg <= y_is_0_reg_1275_pp0_iter31_reg;
        y_is_0_reg_1275_pp0_iter33_reg <= y_is_0_reg_1275_pp0_iter32_reg;
        y_is_0_reg_1275_pp0_iter7_reg <= y_is_0_reg_1275;
        y_is_0_reg_1275_pp0_iter8_reg <= y_is_0_reg_1275_pp0_iter7_reg;
        y_is_0_reg_1275_pp0_iter9_reg <= y_is_0_reg_1275_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        e_frac_V_2_reg_1249 <= e_frac_V_2_fu_309_p3;
        icmp_ln824_1_reg_1243 <= icmp_ln824_1_fu_289_p2;
        icmp_ln824_1_reg_1243_pp0_iter1_reg <= icmp_ln824_1_reg_1243;
        p_Result_7_reg_1228 <= data_V_fu_263_p1[32'd63];
        p_Result_7_reg_1228_pp0_iter1_reg <= p_Result_7_reg_1228;
        tmp_16_reg_1235 <= {{data_V_fu_263_p1[62:52]}};
        tmp_16_reg_1235_pp0_iter1_reg <= tmp_16_reg_1235;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_Z3_reg_1398 <= pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0_0to33 = 1'b1;
    end else begin
        ap_idle_pp0_0to33 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to33 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Z3_V_fu_664_p4 = {{m_diff_V_fu_640_p2[42:35]}};

assign Z4_fu_674_p1 = m_diff_V_fu_640_p2[34:0];

assign Z4_ind_fu_678_p4 = {{m_diff_V_fu_640_p2[34:27]}};

assign add_ln1146_1_fu_935_p2 = (trunc_ln1146_1_fu_922_p3 + zext_ln1146_4_fu_919_p1);

assign add_ln1146_2_fu_941_p2 = (trunc_ln3_fu_912_p3 + zext_ln1146_3_fu_909_p1);

assign add_ln657_2_fu_839_p2 = (exp_Z2P_m_1_V_reg_1428_pp0_iter26_reg + zext_ln657_4_fu_836_p1);

assign add_ln657_fu_762_p2 = (ret_V_9_reg_1392_pp0_iter20_reg + zext_ln657_2_fu_759_p1);

assign and_ln460_1_fu_1159_p2 = (y_is_inf_fu_987_p2 & and_ln460_fu_1153_p2);

assign and_ln460_fu_1153_p2 = (xor_ln964_fu_1013_p2 & xor_ln407_fu_1096_p2);

assign and_ln467_1_fu_1119_p2 = (xor_ln467_fu_1113_p2 & xor_ln407_fu_1096_p2);

assign and_ln467_2_fu_1125_p2 = (or_ln460_fu_1108_p2 & and_ln467_1_fu_1119_p2);

assign and_ln467_3_fu_1165_p2 = (xor_ln407_fu_1096_p2 & and_ln467_fu_1018_p2);

assign and_ln467_fu_1018_p2 = (y_is_inf_fu_987_p2 & p_Result_7_reg_1228_pp0_iter33_reg);

assign and_ln657_1_fu_1131_p2 = (or_ln657_fu_1027_p2 & and_ln467_2_fu_1125_p2);

assign and_ln657_fu_1023_p2 = (icmp_ln657_reg_1328_pp0_iter33_reg & icmp_ln1453_reg_1333_pp0_iter33_reg);

assign and_ln844_1_fu_1183_p2 = (and_ln844_fu_1177_p2 & and_ln467_2_fu_1125_p2);

assign and_ln844_fu_1177_p2 = (xor_ln657_fu_1171_p2 & icmp_ln844_fu_1047_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln844_1_fu_1203_p2[0:0] == 1'b1) ? select_ln844_1_fu_1195_p3 : select_ln407_1_fu_1145_p3);

assign bitcast_ln521_fu_1092_p1 = p_Result_10_fu_1082_p4;

assign data_V_fu_263_p1 = exp;

assign e_frac_V_1_fu_303_p2 = (54'd0 - p_Result_8_fu_295_p3);

assign e_frac_V_2_fu_309_p3 = ((p_Result_7_fu_267_p3[0:0] == 1'b1) ? e_frac_V_1_fu_303_p2 : p_Result_8_fu_295_p3);

assign exp_Z1P_m_1_l_V_fu_848_p2 = (zext_ln657_5_fu_844_p1 + zext_ln1146_1_fu_832_p1);

assign exp_Z2P_m_1_V_fu_771_p2 = (zext_ln657_3_fu_767_p1 + zext_ln1146_fu_756_p1);

assign exp_Z2_m_1_V_fu_787_p4 = {{{Z2_V_reg_1365_pp0_iter21_reg}, {1'd0}}, {tmp_4_reg_1434}};

assign grp_fu_1217_p1 = 31'd23637;

assign grp_fu_320_p1 = 120'd73786926661828049774;

assign grp_fu_736_p0 = grp_fu_736_p00;

assign grp_fu_736_p00 = ret_V_10_fu_721_p4;

assign grp_fu_736_p1 = grp_fu_736_p10;

assign grp_fu_736_p10 = ret_V_9_reg_1392;

assign grp_fu_802_p0 = grp_fu_802_p00;

assign grp_fu_802_p00 = exp_Z2_m_1_V_fu_787_p4;

assign grp_fu_802_p1 = grp_fu_802_p10;

assign grp_fu_802_p10 = exp_Z2P_m_1_V_reg_1428;

assign grp_fu_880_p0 = grp_fu_880_p00;

assign grp_fu_880_p00 = exp_Z1P_m_1_V_reg_1465;

assign grp_fu_880_p1 = grp_fu_880_p10;

assign grp_fu_880_p10 = exp_Z1_hi_V_reg_1470;

assign icmp_ln1453_fu_557_p2 = ((r_V_17_fu_483_p3 != sext_ln568_1_fu_467_p1) ? 1'b1 : 1'b0);

assign icmp_ln657_fu_552_p2 = (($signed(m_exp_reg_1268) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln805_fu_593_p2 = ((trunc_ln805_fu_590_p1 == 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_1_fu_289_p2 = ((tmp_17_fu_285_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_fu_340_p2 = ((tmp_16_reg_1235_pp0_iter5_reg == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln840_fu_977_p2 = (($signed(tmp_13_fu_967_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln844_fu_1047_p2 = (($signed(r_exp_V_2_reg_1522) < $signed(13'd7170)) ? 1'b1 : 1'b0);

assign isNeg_1_fu_412_p3 = sub_ln1311_fu_356_p2[32'd10];

assign isNeg_fu_348_p3 = m_exp_fu_329_p2[32'd11];

assign lhs_V_1_fu_822_p5 = {{{{Z2_V_reg_1365_pp0_iter26_reg}, {1'd0}}, {tmp_4_reg_1434_pp0_iter26_reg}}, {2'd0}};

assign lhs_V_4_fu_899_p3 = {{ret_V_11_reg_1485}, {49'd0}};

assign m_diff_V_fu_640_p2 = (trunc_ln2_reg_1323_pp0_iter15_reg - trunc_ln657_1_reg_1355);

assign m_exp_fu_329_p2 = ($signed(zext_ln510_fu_326_p1) + $signed(12'd3073));

assign m_fix_hi_V_fu_520_p4 = {{select_ln578_fu_513_p3[129:114]}};

assign m_fix_l_fu_404_p3 = ((isNeg_fu_348_p3[0:0] == 1'b1) ? sext_ln1286_fu_390_p1 : trunc_ln1286_1_fu_400_p1);

assign or_ln407_fu_1001_p2 = (y_is_NaN_fu_996_p2 | y_is_0_reg_1275_pp0_iter33_reg);

assign or_ln460_fu_1108_p2 = (xor_ln460_fu_1102_p2 | p_Result_7_reg_1228_pp0_iter33_reg);

assign or_ln657_fu_1027_p2 = (icmp_ln840_reg_1527 | and_ln657_fu_1023_p2);

assign or_ln844_1_fu_1203_p2 = (or_ln844_fu_1189_p2 | and_ln460_1_fu_1159_p2);

assign or_ln844_fu_1189_p2 = (and_ln844_1_fu_1183_p2 | and_ln467_3_fu_1165_p2);

assign out_exp_V_fu_1077_p2 = (trunc_ln167_reg_1532 + 11'd1023);

assign p_Result_10_fu_1082_p4 = {{{{1'd0}, {out_exp_V_fu_1077_p2}}}, {tmp_18_fu_1070_p3}};

assign p_Result_7_fu_267_p3 = data_V_fu_263_p1[32'd63];

assign p_Result_8_fu_295_p3 = {{2'd1}, {tmp_17_fu_285_p1}};

assign p_Result_s_fu_583_p3 = grp_fu_1217_p3[32'd30];

assign pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 = zext_ln488_fu_808_p1;

assign pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 = zext_ln488_3_fu_752_p1;

assign pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 = zext_ln488_2_fu_693_p1;

assign pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 = zext_ln488_1_fu_688_p1;

assign r_V_17_fu_483_p3 = ((isNeg_reg_1292[0:0] == 1'b1) ? r_V_2_fu_473_p2 : r_V_3_fu_478_p2);

assign r_V_1_fu_394_p2 = sext_ln568_fu_345_p1 << sh_prom_i_i366_cast_cast_cast_cast_fu_377_p1;

assign r_V_2_fu_473_p2 = m_fix_l_reg_1302 << sh_prom_i_i347_cast_cast_cast_cast_fu_470_p1;

assign r_V_3_fu_478_p2 = $signed(m_fix_l_reg_1302) >>> sh_prom_i_i347_cast_cast_cast_cast_fu_470_p1;

assign r_V_5_fu_504_p2 = sext_ln568_reg_1287 << zext_ln1253_fu_500_p1;

assign r_V_6_fu_436_p2 = sext_ln568_fu_345_p1 << zext_ln1253_1_fu_432_p1;

assign r_V_7_fu_450_p2 = $signed(m_frac_l_V_reg_1259) >>> sext_ln1253_1cast_fu_446_p1;

assign r_V_8_fu_459_p3 = ((isNeg_1_fu_412_p3[0:0] == 1'b1) ? trunc_ln1252_fu_442_p1 : sext_ln1252_fu_455_p1);

assign r_V_fu_385_p2 = $signed(m_frac_l_V_reg_1259) >>> sh_prom_i_i366_cast_cast_castcast_fu_381_p1;

assign r_exp_V_2_fu_960_p3 = ((tmp_11_fu_947_p3[0:0] == 1'b1) ? ret_V_8_reg_1343_pp0_iter32_reg : r_exp_V_fu_955_p2);

assign r_exp_V_fu_955_p2 = ($signed(ret_V_8_reg_1343_pp0_iter32_reg) + $signed(13'd8191));

assign r_fu_698_p4 = {{pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1[25:16]}};

assign ret_V_10_fu_721_p4 = {{{Z3_V_reg_1372_pp0_iter17_reg}, {9'd0}}, {f_Z3_reg_1398}};

assign ret_V_11_fu_886_p2 = (exp_Z1_V_reg_1460_pp0_iter31_reg + 58'd16);

assign ret_V_6_fu_929_p2 = (lhs_V_4_fu_899_p3 + zext_ln1146_2_fu_906_p1);

assign ret_V_8_fu_613_p3 = ((p_Result_s_fu_583_p3[0:0] == 1'b1) ? select_ln804_fu_605_p3 : ret_V_cast_fu_574_p4);

assign ret_V_9_fu_715_p2 = (zext_ln657_fu_708_p1 + zext_ln657_1_fu_711_p1);

assign ret_V_cast_fu_574_p4 = {{grp_fu_1217_p3[30:18]}};

assign ret_V_fu_599_p2 = (ret_V_cast_fu_574_p4 + 13'd1);

assign rhs_fu_563_p3 = {{p_Result_9_reg_1313_pp0_iter8_reg}, {18'd131072}};

assign select_ln407_1_fu_1145_p3 = ((or_ln407_fu_1001_p2[0:0] == 1'b1) ? select_ln407_fu_1006_p3 : select_ln657_fu_1137_p3);

assign select_ln407_fu_1006_p3 = ((y_is_0_reg_1275_pp0_iter33_reg[0:0] == 1'b1) ? 64'd4607182418800017408 : 64'd9223372036854775807);

assign select_ln578_fu_513_p3 = ((tmp_7_fu_490_p3[0:0] == 1'b1) ? r_V_8_reg_1308 : trunc_ln1286_2_fu_509_p1);

assign select_ln657_fu_1137_p3 = ((and_ln657_1_fu_1131_p2[0:0] == 1'b1) ? select_ln658_fu_1039_p3 : bitcast_ln521_fu_1092_p1);

assign select_ln658_fu_1039_p3 = ((tmp_14_fu_1032_p3[0:0] == 1'b1) ? 64'd0 : 64'd9218868437227405312);

assign select_ln804_fu_605_p3 = ((icmp_ln805_fu_593_p2[0:0] == 1'b1) ? ret_V_cast_fu_574_p4 : ret_V_fu_599_p2);

assign select_ln844_1_fu_1195_p3 = ((or_ln844_fu_1189_p2[0:0] == 1'b1) ? 64'd0 : 64'd9218868437227405312);

assign sext_ln1252_fu_455_p1 = $signed(r_V_7_fu_450_p2);

assign sext_ln1253_1_fu_428_p1 = $signed(ush_2_fu_420_p3);

assign sext_ln1253_1cast_fu_446_p1 = $unsigned(sext_ln1253_1_fu_428_p1);

assign sext_ln1253_fu_497_p1 = m_exp_reg_1268;

assign sext_ln1286_fu_390_p1 = $signed(r_V_fu_385_p2);

assign sext_ln1311_fu_361_p1 = sub_ln1311_fu_356_p2;

assign sext_ln568_1_fu_467_p1 = m_frac_l_V_reg_1259_pp0_iter6_reg;

assign sext_ln568_fu_345_p1 = m_frac_l_V_reg_1259;

assign sh_prom_i_i347_cast_cast_cast_cast_fu_470_p1 = $unsigned(sh_prom_i_i366_cast_cast_cast_reg_1297);

assign sh_prom_i_i366_cast_cast_cast_cast_fu_377_p1 = $unsigned(sh_prom_i_i366_cast_cast_cast_fu_373_p1);

assign sh_prom_i_i366_cast_cast_cast_fu_373_p1 = $signed(ush_fu_365_p3);

assign sh_prom_i_i366_cast_cast_castcast_fu_381_p1 = $unsigned(sh_prom_i_i366_cast_cast_cast_fu_373_p1);

assign sub_ln1311_fu_356_p2 = (11'd1023 - tmp_16_reg_1235_pp0_iter5_reg);

assign tmp_11_fu_947_p3 = ret_V_6_fu_929_p2[32'd106];

assign tmp_13_fu_967_p4 = {{r_exp_V_2_fu_960_p3[12:10]}};

assign tmp_14_fu_1032_p3 = m_frac_l_V_reg_1259_pp0_iter33_reg[32'd119];

assign tmp_17_fu_285_p1 = data_V_fu_263_p1[51:0];

assign tmp_18_fu_1070_p3 = ((tmp_11_reg_1517[0:0] == 1'b1) ? tmp_fu_1052_p4 : tmp_1_fu_1061_p4);

assign tmp_1_fu_1061_p4 = {{add_ln1146_1_reg_1507[104:53]}};

assign tmp_7_fu_490_p3 = m_exp_reg_1268[32'd11];

assign tmp_fu_1052_p4 = {{add_ln1146_2_reg_1512[105:54]}};

assign trunc_ln1146_1_fu_922_p3 = {{trunc_ln1146_2_reg_1502}, {49'd0}};

assign trunc_ln1146_2_fu_895_p1 = ret_V_11_fu_886_p2[55:0];

assign trunc_ln1146_fu_891_p1 = ret_V_11_fu_886_p2[56:0];

assign trunc_ln1252_fu_442_p1 = r_V_6_fu_436_p2[129:0];

assign trunc_ln1286_1_fu_400_p1 = r_V_1_fu_394_p2[129:0];

assign trunc_ln1286_2_fu_509_p1 = r_V_5_fu_504_p2[129:0];

assign trunc_ln167_fu_983_p1 = r_exp_V_2_fu_960_p3[10:0];

assign trunc_ln3_fu_912_p3 = {{trunc_ln1146_reg_1497}, {49'd0}};

assign trunc_ln805_fu_590_p1 = grp_fu_1217_p3[17:0];

assign ush_2_fu_420_p3 = ((isNeg_1_fu_412_p3[0:0] == 1'b1) ? m_exp_fu_329_p2 : sext_ln1311_fu_361_p1);

assign ush_fu_365_p3 = ((isNeg_fu_348_p3[0:0] == 1'b1) ? sext_ln1311_fu_361_p1 : m_exp_fu_329_p2);

assign xor_ln407_fu_1096_p2 = (or_ln407_fu_1001_p2 ^ 1'd1);

assign xor_ln460_fu_1102_p2 = (y_is_inf_fu_987_p2 ^ 1'd1);

assign xor_ln467_fu_1113_p2 = (1'd1 ^ and_ln467_fu_1018_p2);

assign xor_ln657_fu_1171_p2 = (or_ln657_fu_1027_p2 ^ 1'd1);

assign xor_ln828_fu_991_p2 = (icmp_ln824_1_reg_1243_pp0_iter33_reg ^ 1'd1);

assign xor_ln964_fu_1013_p2 = (p_Result_7_reg_1228_pp0_iter33_reg ^ 1'd1);

assign y_is_0_fu_335_p2 = ((tmp_16_reg_1235_pp0_iter5_reg == 11'd0) ? 1'b1 : 1'b0);

assign y_is_NaN_fu_996_p2 = (xor_ln828_fu_991_p2 & icmp_ln824_reg_1281_pp0_iter33_reg);

assign y_is_inf_fu_987_p2 = (icmp_ln824_reg_1281_pp0_iter33_reg & icmp_ln824_1_reg_1243_pp0_iter33_reg);

assign zext_ln1146_1_fu_832_p1 = lhs_V_1_fu_822_p5;

assign zext_ln1146_2_fu_906_p1 = r_V_19_reg_1490;

assign zext_ln1146_3_fu_909_p1 = r_V_19_reg_1490;

assign zext_ln1146_4_fu_919_p1 = r_V_19_reg_1490;

assign zext_ln1146_fu_756_p1 = ret_V_10_reg_1403_pp0_iter20_reg;

assign zext_ln1253_1_fu_432_p1 = $unsigned(sext_ln1253_1_fu_428_p1);

assign zext_ln1253_fu_500_p1 = $unsigned(sext_ln1253_fu_497_p1);

assign zext_ln488_1_fu_688_p1 = Z4_ind_fu_678_p4;

assign zext_ln488_2_fu_693_p1 = Z3_V_fu_664_p4;

assign zext_ln488_3_fu_752_p1 = Z2_V_reg_1365_pp0_iter19_reg;

assign zext_ln488_fu_808_p1 = m_diff_hi_V_reg_1360_pp0_iter25_reg;

assign zext_ln510_fu_326_p1 = tmp_16_reg_1235_pp0_iter5_reg;

assign zext_ln657_1_fu_711_p1 = r_fu_698_p4;

assign zext_ln657_2_fu_759_p1 = trunc_ln657_4_reg_1418;

assign zext_ln657_3_fu_767_p1 = add_ln657_fu_762_p2;

assign zext_ln657_4_fu_836_p1 = trunc_ln657_5_reg_1455;

assign zext_ln657_5_fu_844_p1 = add_ln657_2_fu_839_p2;

assign zext_ln657_fu_708_p1 = Z4_reg_1377;

always @ (posedge ap_clk) begin
    ret_V_10_reg_1403[34:26] <= 9'b000000000;
    ret_V_10_reg_1403_pp0_iter19_reg[34:26] <= 9'b000000000;
    ret_V_10_reg_1403_pp0_iter20_reg[34:26] <= 9'b000000000;
end

endmodule //dnn_pow_generic_double_s
