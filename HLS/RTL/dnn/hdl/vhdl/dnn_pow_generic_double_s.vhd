-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dnn_pow_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    exp : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of dnn_pow_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv120_3FFFFD2DBEA0F7B6E : STD_LOGIC_VECTOR (119 downto 0) := "000000000000000000000000000000000000000000000000000000111111111111111111110100101101101111101010000011110111101101101110";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv71_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (70 downto 0) := "10110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv58_10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_7_fu_267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1228_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1235 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_reg_1235_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_reg_1235_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_reg_1235_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_reg_1235_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_reg_1235_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln824_1_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_1243_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_frac_V_2_fu_309_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_2_reg_1249 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_320_p2 : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259 : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter6_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter7_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter8_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter9_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter10_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter11_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter12_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter13_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter14_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter15_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter16_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter17_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter18_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter19_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter20_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter21_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter22_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter23_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter24_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter25_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter26_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter27_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter28_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter29_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter30_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter31_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter32_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_frac_l_V_reg_1259_pp0_iter33_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal m_exp_fu_329_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_exp_reg_1268 : STD_LOGIC_VECTOR (11 downto 0);
    signal y_is_0_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1275_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1281_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln568_fu_345_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal sext_ln568_reg_1287 : STD_LOGIC_VECTOR (130 downto 0);
    signal isNeg_fu_348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_prom_i_i366_cast_cast_cast_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_prom_i_i366_cast_cast_cast_reg_1297 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fix_l_fu_404_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal m_fix_l_reg_1302 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_8_fu_459_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_8_reg_1308 : STD_LOGIC_VECTOR (129 downto 0);
    signal p_Result_9_reg_1313 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_reg_1313_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2_reg_1323 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_1323_pp0_iter8_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_1323_pp0_iter9_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_1323_pp0_iter10_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_1323_pp0_iter11_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_1323_pp0_iter12_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_1323_pp0_iter13_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_1323_pp0_iter14_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_1323_pp0_iter15_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal icmp_ln657_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1328_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1453_reg_1333_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_8_fu_613_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter12_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter14_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter16_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter18_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter19_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter20_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter21_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter22_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter23_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter24_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter25_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter26_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter27_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter28_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter29_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter30_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter31_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_reg_1343_pp0_iter32_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln657_1_reg_1355 : STD_LOGIC_VECTOR (58 downto 0);
    signal m_diff_hi_V_reg_1360 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1360_pp0_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1365_pp0_iter26_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_fu_664_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1372 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1372_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_fu_674_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_reg_1377 : STD_LOGIC_VECTOR (34 downto 0);
    signal ret_V_9_fu_715_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_9_reg_1392 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_9_reg_1392_pp0_iter18_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_9_reg_1392_pp0_iter19_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_9_reg_1392_pp0_iter20_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal f_Z3_reg_1398 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_10_fu_721_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_10_reg_1403 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_10_reg_1403_pp0_iter19_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_10_reg_1403_pp0_iter20_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln657_4_reg_1418 : STD_LOGIC_VECTOR (19 downto 0);
    signal exp_Z2P_m_1_V_fu_771_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1428 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1428_pp0_iter22_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1428_pp0_iter23_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1428_pp0_iter24_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1428_pp0_iter25_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1428_pp0_iter26_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_4_reg_1434 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_4_reg_1434_pp0_iter22_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_4_reg_1434_pp0_iter23_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_4_reg_1434_pp0_iter24_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_4_reg_1434_pp0_iter25_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_4_reg_1434_pp0_iter26_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal trunc_ln657_5_reg_1455 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_V_reg_1460 : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1460_pp0_iter28_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1460_pp0_iter29_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1460_pp0_iter30_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1460_pp0_iter31_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1P_m_1_V_reg_1465 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1_hi_V_reg_1470 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_11_fu_886_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal ret_V_11_reg_1485 : STD_LOGIC_VECTOR (57 downto 0);
    signal grp_fu_880_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_19_reg_1490 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln1146_fu_891_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal trunc_ln1146_reg_1497 : STD_LOGIC_VECTOR (56 downto 0);
    signal trunc_ln1146_2_fu_895_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal trunc_ln1146_2_reg_1502 : STD_LOGIC_VECTOR (55 downto 0);
    signal add_ln1146_1_fu_935_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal add_ln1146_1_reg_1507 : STD_LOGIC_VECTOR (104 downto 0);
    signal add_ln1146_2_fu_941_p2 : STD_LOGIC_VECTOR (105 downto 0);
    signal add_ln1146_2_reg_1512 : STD_LOGIC_VECTOR (105 downto 0);
    signal tmp_11_fu_947_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1517 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_2_fu_960_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_2_reg_1522 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln840_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln840_reg_1527 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln167_fu_983_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln167_reg_1532 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln488_1_fu_688_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_2_fu_693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_3_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_fu_808_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_285_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_8_fu_295_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_1_fu_303_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_320_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal zext_ln510_fu_326_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1311_fu_356_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1311_fu_361_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_fu_365_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_prom_i_i366_cast_cast_castcast_fu_381_p1 : STD_LOGIC_VECTOR (119 downto 0);
    signal r_V_fu_385_p2 : STD_LOGIC_VECTOR (119 downto 0);
    signal sh_prom_i_i366_cast_cast_cast_cast_fu_377_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal r_V_1_fu_394_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal sext_ln1286_fu_390_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal trunc_ln1286_1_fu_400_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal isNeg_1_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_2_fu_420_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1253_1_fu_428_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1253_1_fu_432_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal r_V_6_fu_436_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal sext_ln1253_1cast_fu_446_p1 : STD_LOGIC_VECTOR (119 downto 0);
    signal r_V_7_fu_450_p2 : STD_LOGIC_VECTOR (119 downto 0);
    signal trunc_ln1252_fu_442_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln1252_fu_455_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal sh_prom_i_i347_cast_cast_cast_cast_fu_470_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_2_fu_473_p2 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_3_fu_478_p2 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln1253_fu_497_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1253_fu_500_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal r_V_5_fu_504_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal tmp_7_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1286_2_fu_509_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal select_ln578_fu_513_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal m_fix_hi_V_fu_520_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_17_fu_483_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln568_1_fu_467_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal rhs_fu_563_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1217_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln805_fu_590_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_cast_fu_574_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln805_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_599_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_s_fu_583_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln804_fu_605_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_624_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_diff_V_fu_640_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal Z4_ind_fu_678_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_fu_698_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln657_fu_708_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln657_1_fu_711_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_736_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_736_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_736_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln657_2_fu_759_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln657_fu_762_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln657_3_fu_767_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1146_fu_756_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2_m_1_V_fu_787_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_802_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_802_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_802_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal lhs_V_1_fu_822_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln657_4_fu_836_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln657_2_fu_839_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln657_5_fu_844_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln1146_1_fu_832_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_V_fu_848_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_880_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_880_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_4_fu_899_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln1146_2_fu_906_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal trunc_ln1146_1_fu_922_p3 : STD_LOGIC_VECTOR (104 downto 0);
    signal zext_ln1146_4_fu_919_p1 : STD_LOGIC_VECTOR (104 downto 0);
    signal trunc_ln3_fu_912_p3 : STD_LOGIC_VECTOR (105 downto 0);
    signal zext_ln1146_3_fu_909_p1 : STD_LOGIC_VECTOR (105 downto 0);
    signal ret_V_6_fu_929_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal r_exp_V_fu_955_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_13_fu_967_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln828_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_NaN_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln657_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1032_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1052_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1_fu_1061_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal out_exp_V_fu_1077_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_1070_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_10_fu_1082_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln407_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln460_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln407_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln467_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_1_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln460_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_2_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln657_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln657_1_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln658_fu_1039_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln521_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln407_fu_1006_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln657_fu_1137_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln964_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln460_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln844_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln657_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln844_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln844_1_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_3_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln844_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln460_1_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln844_1_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln844_1_fu_1195_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln407_1_fu_1145_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1217_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to33 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_736_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_736_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_802_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_802_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_880_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal grp_fu_880_p10 : STD_LOGIC_VECTOR (99 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component dnn_mul_54s_67ns_120_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (53 downto 0);
        din1 : IN STD_LOGIC_VECTOR (66 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (119 downto 0) );
    end component;


    component dnn_mul_13s_71s_71_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (70 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (70 downto 0) );
    end component;


    component dnn_mul_43ns_36ns_79_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component dnn_mul_49ns_44ns_93_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (48 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component dnn_mul_50ns_50ns_100_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component dnn_mac_muladd_16s_16ns_19s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58bkb
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0cud
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0,
        address1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1,
        ce1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1,
        q1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component dnn_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0dEe
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    mul_54s_67ns_120_5_1_U1 : component dnn_mul_54s_67ns_120_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 54,
        din1_WIDTH => 67,
        dout_WIDTH => 120)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => e_frac_V_2_reg_1249,
        din1 => grp_fu_320_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_320_p2);

    mul_13s_71s_71_5_1_U2 : component dnn_mul_13s_71s_71_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 13,
        din1_WIDTH => 71,
        dout_WIDTH => 71)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ret_V_8_reg_1343,
        din1 => ap_const_lv71_58B90BFBE8E7BCD5E4,
        ce => ap_const_logic_1,
        dout => grp_fu_624_p2);

    mul_43ns_36ns_79_3_1_U3 : component dnn_mul_43ns_36ns_79_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 43,
        din1_WIDTH => 36,
        dout_WIDTH => 79)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_736_p0,
        din1 => grp_fu_736_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_736_p2);

    mul_49ns_44ns_93_5_1_U4 : component dnn_mul_49ns_44ns_93_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 49,
        din1_WIDTH => 44,
        dout_WIDTH => 93)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_802_p0,
        din1 => grp_fu_802_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_802_p2);

    mul_50ns_50ns_100_5_1_U5 : component dnn_mul_50ns_50ns_100_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_880_p0,
        din1 => grp_fu_880_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_880_p2);

    mac_muladd_16s_16ns_19s_31_4_1_U6 : component dnn_mac_muladd_16s_16ns_19s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_V_fu_520_p4,
        din1 => grp_fu_1217_p1,
        din2 => rhs_fu_563_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1217_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_V_reg_1365 <= m_diff_V_fu_640_p2(50 downto 43);
                Z2_V_reg_1365_pp0_iter17_reg <= Z2_V_reg_1365;
                Z2_V_reg_1365_pp0_iter18_reg <= Z2_V_reg_1365_pp0_iter17_reg;
                Z2_V_reg_1365_pp0_iter19_reg <= Z2_V_reg_1365_pp0_iter18_reg;
                Z2_V_reg_1365_pp0_iter20_reg <= Z2_V_reg_1365_pp0_iter19_reg;
                Z2_V_reg_1365_pp0_iter21_reg <= Z2_V_reg_1365_pp0_iter20_reg;
                Z2_V_reg_1365_pp0_iter22_reg <= Z2_V_reg_1365_pp0_iter21_reg;
                Z2_V_reg_1365_pp0_iter23_reg <= Z2_V_reg_1365_pp0_iter22_reg;
                Z2_V_reg_1365_pp0_iter24_reg <= Z2_V_reg_1365_pp0_iter23_reg;
                Z2_V_reg_1365_pp0_iter25_reg <= Z2_V_reg_1365_pp0_iter24_reg;
                Z2_V_reg_1365_pp0_iter26_reg <= Z2_V_reg_1365_pp0_iter25_reg;
                Z3_V_reg_1372 <= m_diff_V_fu_640_p2(42 downto 35);
                Z3_V_reg_1372_pp0_iter17_reg <= Z3_V_reg_1372;
                Z4_reg_1377 <= Z4_fu_674_p1;
                add_ln1146_1_reg_1507 <= add_ln1146_1_fu_935_p2;
                add_ln1146_2_reg_1512 <= add_ln1146_2_fu_941_p2;
                exp_Z1P_m_1_V_reg_1465 <= exp_Z1P_m_1_l_V_fu_848_p2(51 downto 2);
                exp_Z1_V_reg_1460 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
                exp_Z1_V_reg_1460_pp0_iter28_reg <= exp_Z1_V_reg_1460;
                exp_Z1_V_reg_1460_pp0_iter29_reg <= exp_Z1_V_reg_1460_pp0_iter28_reg;
                exp_Z1_V_reg_1460_pp0_iter30_reg <= exp_Z1_V_reg_1460_pp0_iter29_reg;
                exp_Z1_V_reg_1460_pp0_iter31_reg <= exp_Z1_V_reg_1460_pp0_iter30_reg;
                exp_Z1_hi_V_reg_1470 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(57 downto 8);
                exp_Z2P_m_1_V_reg_1428 <= exp_Z2P_m_1_V_fu_771_p2;
                exp_Z2P_m_1_V_reg_1428_pp0_iter22_reg <= exp_Z2P_m_1_V_reg_1428;
                exp_Z2P_m_1_V_reg_1428_pp0_iter23_reg <= exp_Z2P_m_1_V_reg_1428_pp0_iter22_reg;
                exp_Z2P_m_1_V_reg_1428_pp0_iter24_reg <= exp_Z2P_m_1_V_reg_1428_pp0_iter23_reg;
                exp_Z2P_m_1_V_reg_1428_pp0_iter25_reg <= exp_Z2P_m_1_V_reg_1428_pp0_iter24_reg;
                exp_Z2P_m_1_V_reg_1428_pp0_iter26_reg <= exp_Z2P_m_1_V_reg_1428_pp0_iter25_reg;
                icmp_ln1453_reg_1333 <= icmp_ln1453_fu_557_p2;
                icmp_ln1453_reg_1333_pp0_iter10_reg <= icmp_ln1453_reg_1333_pp0_iter9_reg;
                icmp_ln1453_reg_1333_pp0_iter11_reg <= icmp_ln1453_reg_1333_pp0_iter10_reg;
                icmp_ln1453_reg_1333_pp0_iter12_reg <= icmp_ln1453_reg_1333_pp0_iter11_reg;
                icmp_ln1453_reg_1333_pp0_iter13_reg <= icmp_ln1453_reg_1333_pp0_iter12_reg;
                icmp_ln1453_reg_1333_pp0_iter14_reg <= icmp_ln1453_reg_1333_pp0_iter13_reg;
                icmp_ln1453_reg_1333_pp0_iter15_reg <= icmp_ln1453_reg_1333_pp0_iter14_reg;
                icmp_ln1453_reg_1333_pp0_iter16_reg <= icmp_ln1453_reg_1333_pp0_iter15_reg;
                icmp_ln1453_reg_1333_pp0_iter17_reg <= icmp_ln1453_reg_1333_pp0_iter16_reg;
                icmp_ln1453_reg_1333_pp0_iter18_reg <= icmp_ln1453_reg_1333_pp0_iter17_reg;
                icmp_ln1453_reg_1333_pp0_iter19_reg <= icmp_ln1453_reg_1333_pp0_iter18_reg;
                icmp_ln1453_reg_1333_pp0_iter20_reg <= icmp_ln1453_reg_1333_pp0_iter19_reg;
                icmp_ln1453_reg_1333_pp0_iter21_reg <= icmp_ln1453_reg_1333_pp0_iter20_reg;
                icmp_ln1453_reg_1333_pp0_iter22_reg <= icmp_ln1453_reg_1333_pp0_iter21_reg;
                icmp_ln1453_reg_1333_pp0_iter23_reg <= icmp_ln1453_reg_1333_pp0_iter22_reg;
                icmp_ln1453_reg_1333_pp0_iter24_reg <= icmp_ln1453_reg_1333_pp0_iter23_reg;
                icmp_ln1453_reg_1333_pp0_iter25_reg <= icmp_ln1453_reg_1333_pp0_iter24_reg;
                icmp_ln1453_reg_1333_pp0_iter26_reg <= icmp_ln1453_reg_1333_pp0_iter25_reg;
                icmp_ln1453_reg_1333_pp0_iter27_reg <= icmp_ln1453_reg_1333_pp0_iter26_reg;
                icmp_ln1453_reg_1333_pp0_iter28_reg <= icmp_ln1453_reg_1333_pp0_iter27_reg;
                icmp_ln1453_reg_1333_pp0_iter29_reg <= icmp_ln1453_reg_1333_pp0_iter28_reg;
                icmp_ln1453_reg_1333_pp0_iter30_reg <= icmp_ln1453_reg_1333_pp0_iter29_reg;
                icmp_ln1453_reg_1333_pp0_iter31_reg <= icmp_ln1453_reg_1333_pp0_iter30_reg;
                icmp_ln1453_reg_1333_pp0_iter32_reg <= icmp_ln1453_reg_1333_pp0_iter31_reg;
                icmp_ln1453_reg_1333_pp0_iter33_reg <= icmp_ln1453_reg_1333_pp0_iter32_reg;
                icmp_ln1453_reg_1333_pp0_iter8_reg <= icmp_ln1453_reg_1333;
                icmp_ln1453_reg_1333_pp0_iter9_reg <= icmp_ln1453_reg_1333_pp0_iter8_reg;
                icmp_ln657_reg_1328 <= icmp_ln657_fu_552_p2;
                icmp_ln657_reg_1328_pp0_iter10_reg <= icmp_ln657_reg_1328_pp0_iter9_reg;
                icmp_ln657_reg_1328_pp0_iter11_reg <= icmp_ln657_reg_1328_pp0_iter10_reg;
                icmp_ln657_reg_1328_pp0_iter12_reg <= icmp_ln657_reg_1328_pp0_iter11_reg;
                icmp_ln657_reg_1328_pp0_iter13_reg <= icmp_ln657_reg_1328_pp0_iter12_reg;
                icmp_ln657_reg_1328_pp0_iter14_reg <= icmp_ln657_reg_1328_pp0_iter13_reg;
                icmp_ln657_reg_1328_pp0_iter15_reg <= icmp_ln657_reg_1328_pp0_iter14_reg;
                icmp_ln657_reg_1328_pp0_iter16_reg <= icmp_ln657_reg_1328_pp0_iter15_reg;
                icmp_ln657_reg_1328_pp0_iter17_reg <= icmp_ln657_reg_1328_pp0_iter16_reg;
                icmp_ln657_reg_1328_pp0_iter18_reg <= icmp_ln657_reg_1328_pp0_iter17_reg;
                icmp_ln657_reg_1328_pp0_iter19_reg <= icmp_ln657_reg_1328_pp0_iter18_reg;
                icmp_ln657_reg_1328_pp0_iter20_reg <= icmp_ln657_reg_1328_pp0_iter19_reg;
                icmp_ln657_reg_1328_pp0_iter21_reg <= icmp_ln657_reg_1328_pp0_iter20_reg;
                icmp_ln657_reg_1328_pp0_iter22_reg <= icmp_ln657_reg_1328_pp0_iter21_reg;
                icmp_ln657_reg_1328_pp0_iter23_reg <= icmp_ln657_reg_1328_pp0_iter22_reg;
                icmp_ln657_reg_1328_pp0_iter24_reg <= icmp_ln657_reg_1328_pp0_iter23_reg;
                icmp_ln657_reg_1328_pp0_iter25_reg <= icmp_ln657_reg_1328_pp0_iter24_reg;
                icmp_ln657_reg_1328_pp0_iter26_reg <= icmp_ln657_reg_1328_pp0_iter25_reg;
                icmp_ln657_reg_1328_pp0_iter27_reg <= icmp_ln657_reg_1328_pp0_iter26_reg;
                icmp_ln657_reg_1328_pp0_iter28_reg <= icmp_ln657_reg_1328_pp0_iter27_reg;
                icmp_ln657_reg_1328_pp0_iter29_reg <= icmp_ln657_reg_1328_pp0_iter28_reg;
                icmp_ln657_reg_1328_pp0_iter30_reg <= icmp_ln657_reg_1328_pp0_iter29_reg;
                icmp_ln657_reg_1328_pp0_iter31_reg <= icmp_ln657_reg_1328_pp0_iter30_reg;
                icmp_ln657_reg_1328_pp0_iter32_reg <= icmp_ln657_reg_1328_pp0_iter31_reg;
                icmp_ln657_reg_1328_pp0_iter33_reg <= icmp_ln657_reg_1328_pp0_iter32_reg;
                icmp_ln657_reg_1328_pp0_iter8_reg <= icmp_ln657_reg_1328;
                icmp_ln657_reg_1328_pp0_iter9_reg <= icmp_ln657_reg_1328_pp0_iter8_reg;
                icmp_ln824_1_reg_1243_pp0_iter10_reg <= icmp_ln824_1_reg_1243_pp0_iter9_reg;
                icmp_ln824_1_reg_1243_pp0_iter11_reg <= icmp_ln824_1_reg_1243_pp0_iter10_reg;
                icmp_ln824_1_reg_1243_pp0_iter12_reg <= icmp_ln824_1_reg_1243_pp0_iter11_reg;
                icmp_ln824_1_reg_1243_pp0_iter13_reg <= icmp_ln824_1_reg_1243_pp0_iter12_reg;
                icmp_ln824_1_reg_1243_pp0_iter14_reg <= icmp_ln824_1_reg_1243_pp0_iter13_reg;
                icmp_ln824_1_reg_1243_pp0_iter15_reg <= icmp_ln824_1_reg_1243_pp0_iter14_reg;
                icmp_ln824_1_reg_1243_pp0_iter16_reg <= icmp_ln824_1_reg_1243_pp0_iter15_reg;
                icmp_ln824_1_reg_1243_pp0_iter17_reg <= icmp_ln824_1_reg_1243_pp0_iter16_reg;
                icmp_ln824_1_reg_1243_pp0_iter18_reg <= icmp_ln824_1_reg_1243_pp0_iter17_reg;
                icmp_ln824_1_reg_1243_pp0_iter19_reg <= icmp_ln824_1_reg_1243_pp0_iter18_reg;
                icmp_ln824_1_reg_1243_pp0_iter20_reg <= icmp_ln824_1_reg_1243_pp0_iter19_reg;
                icmp_ln824_1_reg_1243_pp0_iter21_reg <= icmp_ln824_1_reg_1243_pp0_iter20_reg;
                icmp_ln824_1_reg_1243_pp0_iter22_reg <= icmp_ln824_1_reg_1243_pp0_iter21_reg;
                icmp_ln824_1_reg_1243_pp0_iter23_reg <= icmp_ln824_1_reg_1243_pp0_iter22_reg;
                icmp_ln824_1_reg_1243_pp0_iter24_reg <= icmp_ln824_1_reg_1243_pp0_iter23_reg;
                icmp_ln824_1_reg_1243_pp0_iter25_reg <= icmp_ln824_1_reg_1243_pp0_iter24_reg;
                icmp_ln824_1_reg_1243_pp0_iter26_reg <= icmp_ln824_1_reg_1243_pp0_iter25_reg;
                icmp_ln824_1_reg_1243_pp0_iter27_reg <= icmp_ln824_1_reg_1243_pp0_iter26_reg;
                icmp_ln824_1_reg_1243_pp0_iter28_reg <= icmp_ln824_1_reg_1243_pp0_iter27_reg;
                icmp_ln824_1_reg_1243_pp0_iter29_reg <= icmp_ln824_1_reg_1243_pp0_iter28_reg;
                icmp_ln824_1_reg_1243_pp0_iter2_reg <= icmp_ln824_1_reg_1243_pp0_iter1_reg;
                icmp_ln824_1_reg_1243_pp0_iter30_reg <= icmp_ln824_1_reg_1243_pp0_iter29_reg;
                icmp_ln824_1_reg_1243_pp0_iter31_reg <= icmp_ln824_1_reg_1243_pp0_iter30_reg;
                icmp_ln824_1_reg_1243_pp0_iter32_reg <= icmp_ln824_1_reg_1243_pp0_iter31_reg;
                icmp_ln824_1_reg_1243_pp0_iter33_reg <= icmp_ln824_1_reg_1243_pp0_iter32_reg;
                icmp_ln824_1_reg_1243_pp0_iter3_reg <= icmp_ln824_1_reg_1243_pp0_iter2_reg;
                icmp_ln824_1_reg_1243_pp0_iter4_reg <= icmp_ln824_1_reg_1243_pp0_iter3_reg;
                icmp_ln824_1_reg_1243_pp0_iter5_reg <= icmp_ln824_1_reg_1243_pp0_iter4_reg;
                icmp_ln824_1_reg_1243_pp0_iter6_reg <= icmp_ln824_1_reg_1243_pp0_iter5_reg;
                icmp_ln824_1_reg_1243_pp0_iter7_reg <= icmp_ln824_1_reg_1243_pp0_iter6_reg;
                icmp_ln824_1_reg_1243_pp0_iter8_reg <= icmp_ln824_1_reg_1243_pp0_iter7_reg;
                icmp_ln824_1_reg_1243_pp0_iter9_reg <= icmp_ln824_1_reg_1243_pp0_iter8_reg;
                icmp_ln824_reg_1281 <= icmp_ln824_fu_340_p2;
                icmp_ln824_reg_1281_pp0_iter10_reg <= icmp_ln824_reg_1281_pp0_iter9_reg;
                icmp_ln824_reg_1281_pp0_iter11_reg <= icmp_ln824_reg_1281_pp0_iter10_reg;
                icmp_ln824_reg_1281_pp0_iter12_reg <= icmp_ln824_reg_1281_pp0_iter11_reg;
                icmp_ln824_reg_1281_pp0_iter13_reg <= icmp_ln824_reg_1281_pp0_iter12_reg;
                icmp_ln824_reg_1281_pp0_iter14_reg <= icmp_ln824_reg_1281_pp0_iter13_reg;
                icmp_ln824_reg_1281_pp0_iter15_reg <= icmp_ln824_reg_1281_pp0_iter14_reg;
                icmp_ln824_reg_1281_pp0_iter16_reg <= icmp_ln824_reg_1281_pp0_iter15_reg;
                icmp_ln824_reg_1281_pp0_iter17_reg <= icmp_ln824_reg_1281_pp0_iter16_reg;
                icmp_ln824_reg_1281_pp0_iter18_reg <= icmp_ln824_reg_1281_pp0_iter17_reg;
                icmp_ln824_reg_1281_pp0_iter19_reg <= icmp_ln824_reg_1281_pp0_iter18_reg;
                icmp_ln824_reg_1281_pp0_iter20_reg <= icmp_ln824_reg_1281_pp0_iter19_reg;
                icmp_ln824_reg_1281_pp0_iter21_reg <= icmp_ln824_reg_1281_pp0_iter20_reg;
                icmp_ln824_reg_1281_pp0_iter22_reg <= icmp_ln824_reg_1281_pp0_iter21_reg;
                icmp_ln824_reg_1281_pp0_iter23_reg <= icmp_ln824_reg_1281_pp0_iter22_reg;
                icmp_ln824_reg_1281_pp0_iter24_reg <= icmp_ln824_reg_1281_pp0_iter23_reg;
                icmp_ln824_reg_1281_pp0_iter25_reg <= icmp_ln824_reg_1281_pp0_iter24_reg;
                icmp_ln824_reg_1281_pp0_iter26_reg <= icmp_ln824_reg_1281_pp0_iter25_reg;
                icmp_ln824_reg_1281_pp0_iter27_reg <= icmp_ln824_reg_1281_pp0_iter26_reg;
                icmp_ln824_reg_1281_pp0_iter28_reg <= icmp_ln824_reg_1281_pp0_iter27_reg;
                icmp_ln824_reg_1281_pp0_iter29_reg <= icmp_ln824_reg_1281_pp0_iter28_reg;
                icmp_ln824_reg_1281_pp0_iter30_reg <= icmp_ln824_reg_1281_pp0_iter29_reg;
                icmp_ln824_reg_1281_pp0_iter31_reg <= icmp_ln824_reg_1281_pp0_iter30_reg;
                icmp_ln824_reg_1281_pp0_iter32_reg <= icmp_ln824_reg_1281_pp0_iter31_reg;
                icmp_ln824_reg_1281_pp0_iter33_reg <= icmp_ln824_reg_1281_pp0_iter32_reg;
                icmp_ln824_reg_1281_pp0_iter7_reg <= icmp_ln824_reg_1281;
                icmp_ln824_reg_1281_pp0_iter8_reg <= icmp_ln824_reg_1281_pp0_iter7_reg;
                icmp_ln824_reg_1281_pp0_iter9_reg <= icmp_ln824_reg_1281_pp0_iter8_reg;
                icmp_ln840_reg_1527 <= icmp_ln840_fu_977_p2;
                isNeg_reg_1292 <= m_exp_fu_329_p2(11 downto 11);
                m_diff_hi_V_reg_1360 <= m_diff_V_fu_640_p2(58 downto 51);
                m_diff_hi_V_reg_1360_pp0_iter17_reg <= m_diff_hi_V_reg_1360;
                m_diff_hi_V_reg_1360_pp0_iter18_reg <= m_diff_hi_V_reg_1360_pp0_iter17_reg;
                m_diff_hi_V_reg_1360_pp0_iter19_reg <= m_diff_hi_V_reg_1360_pp0_iter18_reg;
                m_diff_hi_V_reg_1360_pp0_iter20_reg <= m_diff_hi_V_reg_1360_pp0_iter19_reg;
                m_diff_hi_V_reg_1360_pp0_iter21_reg <= m_diff_hi_V_reg_1360_pp0_iter20_reg;
                m_diff_hi_V_reg_1360_pp0_iter22_reg <= m_diff_hi_V_reg_1360_pp0_iter21_reg;
                m_diff_hi_V_reg_1360_pp0_iter23_reg <= m_diff_hi_V_reg_1360_pp0_iter22_reg;
                m_diff_hi_V_reg_1360_pp0_iter24_reg <= m_diff_hi_V_reg_1360_pp0_iter23_reg;
                m_diff_hi_V_reg_1360_pp0_iter25_reg <= m_diff_hi_V_reg_1360_pp0_iter24_reg;
                m_exp_reg_1268 <= m_exp_fu_329_p2;
                m_fix_l_reg_1302 <= m_fix_l_fu_404_p3;
                m_frac_l_V_reg_1259 <= grp_fu_320_p2;
                m_frac_l_V_reg_1259_pp0_iter10_reg <= m_frac_l_V_reg_1259_pp0_iter9_reg;
                m_frac_l_V_reg_1259_pp0_iter11_reg <= m_frac_l_V_reg_1259_pp0_iter10_reg;
                m_frac_l_V_reg_1259_pp0_iter12_reg <= m_frac_l_V_reg_1259_pp0_iter11_reg;
                m_frac_l_V_reg_1259_pp0_iter13_reg <= m_frac_l_V_reg_1259_pp0_iter12_reg;
                m_frac_l_V_reg_1259_pp0_iter14_reg <= m_frac_l_V_reg_1259_pp0_iter13_reg;
                m_frac_l_V_reg_1259_pp0_iter15_reg <= m_frac_l_V_reg_1259_pp0_iter14_reg;
                m_frac_l_V_reg_1259_pp0_iter16_reg <= m_frac_l_V_reg_1259_pp0_iter15_reg;
                m_frac_l_V_reg_1259_pp0_iter17_reg <= m_frac_l_V_reg_1259_pp0_iter16_reg;
                m_frac_l_V_reg_1259_pp0_iter18_reg <= m_frac_l_V_reg_1259_pp0_iter17_reg;
                m_frac_l_V_reg_1259_pp0_iter19_reg <= m_frac_l_V_reg_1259_pp0_iter18_reg;
                m_frac_l_V_reg_1259_pp0_iter20_reg <= m_frac_l_V_reg_1259_pp0_iter19_reg;
                m_frac_l_V_reg_1259_pp0_iter21_reg <= m_frac_l_V_reg_1259_pp0_iter20_reg;
                m_frac_l_V_reg_1259_pp0_iter22_reg <= m_frac_l_V_reg_1259_pp0_iter21_reg;
                m_frac_l_V_reg_1259_pp0_iter23_reg <= m_frac_l_V_reg_1259_pp0_iter22_reg;
                m_frac_l_V_reg_1259_pp0_iter24_reg <= m_frac_l_V_reg_1259_pp0_iter23_reg;
                m_frac_l_V_reg_1259_pp0_iter25_reg <= m_frac_l_V_reg_1259_pp0_iter24_reg;
                m_frac_l_V_reg_1259_pp0_iter26_reg <= m_frac_l_V_reg_1259_pp0_iter25_reg;
                m_frac_l_V_reg_1259_pp0_iter27_reg <= m_frac_l_V_reg_1259_pp0_iter26_reg;
                m_frac_l_V_reg_1259_pp0_iter28_reg <= m_frac_l_V_reg_1259_pp0_iter27_reg;
                m_frac_l_V_reg_1259_pp0_iter29_reg <= m_frac_l_V_reg_1259_pp0_iter28_reg;
                m_frac_l_V_reg_1259_pp0_iter30_reg <= m_frac_l_V_reg_1259_pp0_iter29_reg;
                m_frac_l_V_reg_1259_pp0_iter31_reg <= m_frac_l_V_reg_1259_pp0_iter30_reg;
                m_frac_l_V_reg_1259_pp0_iter32_reg <= m_frac_l_V_reg_1259_pp0_iter31_reg;
                m_frac_l_V_reg_1259_pp0_iter33_reg <= m_frac_l_V_reg_1259_pp0_iter32_reg;
                m_frac_l_V_reg_1259_pp0_iter6_reg <= m_frac_l_V_reg_1259;
                m_frac_l_V_reg_1259_pp0_iter7_reg <= m_frac_l_V_reg_1259_pp0_iter6_reg;
                m_frac_l_V_reg_1259_pp0_iter8_reg <= m_frac_l_V_reg_1259_pp0_iter7_reg;
                m_frac_l_V_reg_1259_pp0_iter9_reg <= m_frac_l_V_reg_1259_pp0_iter8_reg;
                p_Result_7_reg_1228_pp0_iter10_reg <= p_Result_7_reg_1228_pp0_iter9_reg;
                p_Result_7_reg_1228_pp0_iter11_reg <= p_Result_7_reg_1228_pp0_iter10_reg;
                p_Result_7_reg_1228_pp0_iter12_reg <= p_Result_7_reg_1228_pp0_iter11_reg;
                p_Result_7_reg_1228_pp0_iter13_reg <= p_Result_7_reg_1228_pp0_iter12_reg;
                p_Result_7_reg_1228_pp0_iter14_reg <= p_Result_7_reg_1228_pp0_iter13_reg;
                p_Result_7_reg_1228_pp0_iter15_reg <= p_Result_7_reg_1228_pp0_iter14_reg;
                p_Result_7_reg_1228_pp0_iter16_reg <= p_Result_7_reg_1228_pp0_iter15_reg;
                p_Result_7_reg_1228_pp0_iter17_reg <= p_Result_7_reg_1228_pp0_iter16_reg;
                p_Result_7_reg_1228_pp0_iter18_reg <= p_Result_7_reg_1228_pp0_iter17_reg;
                p_Result_7_reg_1228_pp0_iter19_reg <= p_Result_7_reg_1228_pp0_iter18_reg;
                p_Result_7_reg_1228_pp0_iter20_reg <= p_Result_7_reg_1228_pp0_iter19_reg;
                p_Result_7_reg_1228_pp0_iter21_reg <= p_Result_7_reg_1228_pp0_iter20_reg;
                p_Result_7_reg_1228_pp0_iter22_reg <= p_Result_7_reg_1228_pp0_iter21_reg;
                p_Result_7_reg_1228_pp0_iter23_reg <= p_Result_7_reg_1228_pp0_iter22_reg;
                p_Result_7_reg_1228_pp0_iter24_reg <= p_Result_7_reg_1228_pp0_iter23_reg;
                p_Result_7_reg_1228_pp0_iter25_reg <= p_Result_7_reg_1228_pp0_iter24_reg;
                p_Result_7_reg_1228_pp0_iter26_reg <= p_Result_7_reg_1228_pp0_iter25_reg;
                p_Result_7_reg_1228_pp0_iter27_reg <= p_Result_7_reg_1228_pp0_iter26_reg;
                p_Result_7_reg_1228_pp0_iter28_reg <= p_Result_7_reg_1228_pp0_iter27_reg;
                p_Result_7_reg_1228_pp0_iter29_reg <= p_Result_7_reg_1228_pp0_iter28_reg;
                p_Result_7_reg_1228_pp0_iter2_reg <= p_Result_7_reg_1228_pp0_iter1_reg;
                p_Result_7_reg_1228_pp0_iter30_reg <= p_Result_7_reg_1228_pp0_iter29_reg;
                p_Result_7_reg_1228_pp0_iter31_reg <= p_Result_7_reg_1228_pp0_iter30_reg;
                p_Result_7_reg_1228_pp0_iter32_reg <= p_Result_7_reg_1228_pp0_iter31_reg;
                p_Result_7_reg_1228_pp0_iter33_reg <= p_Result_7_reg_1228_pp0_iter32_reg;
                p_Result_7_reg_1228_pp0_iter3_reg <= p_Result_7_reg_1228_pp0_iter2_reg;
                p_Result_7_reg_1228_pp0_iter4_reg <= p_Result_7_reg_1228_pp0_iter3_reg;
                p_Result_7_reg_1228_pp0_iter5_reg <= p_Result_7_reg_1228_pp0_iter4_reg;
                p_Result_7_reg_1228_pp0_iter6_reg <= p_Result_7_reg_1228_pp0_iter5_reg;
                p_Result_7_reg_1228_pp0_iter7_reg <= p_Result_7_reg_1228_pp0_iter6_reg;
                p_Result_7_reg_1228_pp0_iter8_reg <= p_Result_7_reg_1228_pp0_iter7_reg;
                p_Result_7_reg_1228_pp0_iter9_reg <= p_Result_7_reg_1228_pp0_iter8_reg;
                p_Result_9_reg_1313 <= select_ln578_fu_513_p3(129 downto 129);
                p_Result_9_reg_1313_pp0_iter8_reg <= p_Result_9_reg_1313;
                r_V_19_reg_1490 <= grp_fu_880_p2;
                r_V_8_reg_1308 <= r_V_8_fu_459_p3;
                r_exp_V_2_reg_1522 <= r_exp_V_2_fu_960_p3;
                    ret_V_10_reg_1403(25 downto 0) <= ret_V_10_fu_721_p4(25 downto 0);    ret_V_10_reg_1403(42 downto 35) <= ret_V_10_fu_721_p4(42 downto 35);
                    ret_V_10_reg_1403_pp0_iter19_reg(25 downto 0) <= ret_V_10_reg_1403(25 downto 0);    ret_V_10_reg_1403_pp0_iter19_reg(42 downto 35) <= ret_V_10_reg_1403(42 downto 35);
                    ret_V_10_reg_1403_pp0_iter20_reg(25 downto 0) <= ret_V_10_reg_1403_pp0_iter19_reg(25 downto 0);    ret_V_10_reg_1403_pp0_iter20_reg(42 downto 35) <= ret_V_10_reg_1403_pp0_iter19_reg(42 downto 35);
                ret_V_11_reg_1485 <= ret_V_11_fu_886_p2;
                ret_V_8_reg_1343 <= ret_V_8_fu_613_p3;
                ret_V_8_reg_1343_pp0_iter11_reg <= ret_V_8_reg_1343;
                ret_V_8_reg_1343_pp0_iter12_reg <= ret_V_8_reg_1343_pp0_iter11_reg;
                ret_V_8_reg_1343_pp0_iter13_reg <= ret_V_8_reg_1343_pp0_iter12_reg;
                ret_V_8_reg_1343_pp0_iter14_reg <= ret_V_8_reg_1343_pp0_iter13_reg;
                ret_V_8_reg_1343_pp0_iter15_reg <= ret_V_8_reg_1343_pp0_iter14_reg;
                ret_V_8_reg_1343_pp0_iter16_reg <= ret_V_8_reg_1343_pp0_iter15_reg;
                ret_V_8_reg_1343_pp0_iter17_reg <= ret_V_8_reg_1343_pp0_iter16_reg;
                ret_V_8_reg_1343_pp0_iter18_reg <= ret_V_8_reg_1343_pp0_iter17_reg;
                ret_V_8_reg_1343_pp0_iter19_reg <= ret_V_8_reg_1343_pp0_iter18_reg;
                ret_V_8_reg_1343_pp0_iter20_reg <= ret_V_8_reg_1343_pp0_iter19_reg;
                ret_V_8_reg_1343_pp0_iter21_reg <= ret_V_8_reg_1343_pp0_iter20_reg;
                ret_V_8_reg_1343_pp0_iter22_reg <= ret_V_8_reg_1343_pp0_iter21_reg;
                ret_V_8_reg_1343_pp0_iter23_reg <= ret_V_8_reg_1343_pp0_iter22_reg;
                ret_V_8_reg_1343_pp0_iter24_reg <= ret_V_8_reg_1343_pp0_iter23_reg;
                ret_V_8_reg_1343_pp0_iter25_reg <= ret_V_8_reg_1343_pp0_iter24_reg;
                ret_V_8_reg_1343_pp0_iter26_reg <= ret_V_8_reg_1343_pp0_iter25_reg;
                ret_V_8_reg_1343_pp0_iter27_reg <= ret_V_8_reg_1343_pp0_iter26_reg;
                ret_V_8_reg_1343_pp0_iter28_reg <= ret_V_8_reg_1343_pp0_iter27_reg;
                ret_V_8_reg_1343_pp0_iter29_reg <= ret_V_8_reg_1343_pp0_iter28_reg;
                ret_V_8_reg_1343_pp0_iter30_reg <= ret_V_8_reg_1343_pp0_iter29_reg;
                ret_V_8_reg_1343_pp0_iter31_reg <= ret_V_8_reg_1343_pp0_iter30_reg;
                ret_V_8_reg_1343_pp0_iter32_reg <= ret_V_8_reg_1343_pp0_iter31_reg;
                ret_V_9_reg_1392 <= ret_V_9_fu_715_p2;
                ret_V_9_reg_1392_pp0_iter18_reg <= ret_V_9_reg_1392;
                ret_V_9_reg_1392_pp0_iter19_reg <= ret_V_9_reg_1392_pp0_iter18_reg;
                ret_V_9_reg_1392_pp0_iter20_reg <= ret_V_9_reg_1392_pp0_iter19_reg;
                sext_ln568_reg_1287 <= sext_ln568_fu_345_p1;
                sh_prom_i_i366_cast_cast_cast_reg_1297 <= sh_prom_i_i366_cast_cast_cast_fu_373_p1;
                tmp_11_reg_1517 <= ret_V_6_fu_929_p2(106 downto 106);
                tmp_16_reg_1235_pp0_iter2_reg <= tmp_16_reg_1235_pp0_iter1_reg;
                tmp_16_reg_1235_pp0_iter3_reg <= tmp_16_reg_1235_pp0_iter2_reg;
                tmp_16_reg_1235_pp0_iter4_reg <= tmp_16_reg_1235_pp0_iter3_reg;
                tmp_16_reg_1235_pp0_iter5_reg <= tmp_16_reg_1235_pp0_iter4_reg;
                tmp_4_reg_1434 <= pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(41 downto 2);
                tmp_4_reg_1434_pp0_iter22_reg <= tmp_4_reg_1434;
                tmp_4_reg_1434_pp0_iter23_reg <= tmp_4_reg_1434_pp0_iter22_reg;
                tmp_4_reg_1434_pp0_iter24_reg <= tmp_4_reg_1434_pp0_iter23_reg;
                tmp_4_reg_1434_pp0_iter25_reg <= tmp_4_reg_1434_pp0_iter24_reg;
                tmp_4_reg_1434_pp0_iter26_reg <= tmp_4_reg_1434_pp0_iter25_reg;
                trunc_ln1146_2_reg_1502 <= trunc_ln1146_2_fu_895_p1;
                trunc_ln1146_reg_1497 <= trunc_ln1146_fu_891_p1;
                trunc_ln167_reg_1532 <= trunc_ln167_fu_983_p1;
                trunc_ln2_reg_1323 <= select_ln578_fu_513_p3(117 downto 59);
                trunc_ln2_reg_1323_pp0_iter10_reg <= trunc_ln2_reg_1323_pp0_iter9_reg;
                trunc_ln2_reg_1323_pp0_iter11_reg <= trunc_ln2_reg_1323_pp0_iter10_reg;
                trunc_ln2_reg_1323_pp0_iter12_reg <= trunc_ln2_reg_1323_pp0_iter11_reg;
                trunc_ln2_reg_1323_pp0_iter13_reg <= trunc_ln2_reg_1323_pp0_iter12_reg;
                trunc_ln2_reg_1323_pp0_iter14_reg <= trunc_ln2_reg_1323_pp0_iter13_reg;
                trunc_ln2_reg_1323_pp0_iter15_reg <= trunc_ln2_reg_1323_pp0_iter14_reg;
                trunc_ln2_reg_1323_pp0_iter8_reg <= trunc_ln2_reg_1323;
                trunc_ln2_reg_1323_pp0_iter9_reg <= trunc_ln2_reg_1323_pp0_iter8_reg;
                trunc_ln657_1_reg_1355 <= grp_fu_624_p2(70 downto 12);
                trunc_ln657_4_reg_1418 <= grp_fu_736_p2(78 downto 59);
                trunc_ln657_5_reg_1455 <= grp_fu_802_p2(92 downto 57);
                y_is_0_reg_1275 <= y_is_0_fu_335_p2;
                y_is_0_reg_1275_pp0_iter10_reg <= y_is_0_reg_1275_pp0_iter9_reg;
                y_is_0_reg_1275_pp0_iter11_reg <= y_is_0_reg_1275_pp0_iter10_reg;
                y_is_0_reg_1275_pp0_iter12_reg <= y_is_0_reg_1275_pp0_iter11_reg;
                y_is_0_reg_1275_pp0_iter13_reg <= y_is_0_reg_1275_pp0_iter12_reg;
                y_is_0_reg_1275_pp0_iter14_reg <= y_is_0_reg_1275_pp0_iter13_reg;
                y_is_0_reg_1275_pp0_iter15_reg <= y_is_0_reg_1275_pp0_iter14_reg;
                y_is_0_reg_1275_pp0_iter16_reg <= y_is_0_reg_1275_pp0_iter15_reg;
                y_is_0_reg_1275_pp0_iter17_reg <= y_is_0_reg_1275_pp0_iter16_reg;
                y_is_0_reg_1275_pp0_iter18_reg <= y_is_0_reg_1275_pp0_iter17_reg;
                y_is_0_reg_1275_pp0_iter19_reg <= y_is_0_reg_1275_pp0_iter18_reg;
                y_is_0_reg_1275_pp0_iter20_reg <= y_is_0_reg_1275_pp0_iter19_reg;
                y_is_0_reg_1275_pp0_iter21_reg <= y_is_0_reg_1275_pp0_iter20_reg;
                y_is_0_reg_1275_pp0_iter22_reg <= y_is_0_reg_1275_pp0_iter21_reg;
                y_is_0_reg_1275_pp0_iter23_reg <= y_is_0_reg_1275_pp0_iter22_reg;
                y_is_0_reg_1275_pp0_iter24_reg <= y_is_0_reg_1275_pp0_iter23_reg;
                y_is_0_reg_1275_pp0_iter25_reg <= y_is_0_reg_1275_pp0_iter24_reg;
                y_is_0_reg_1275_pp0_iter26_reg <= y_is_0_reg_1275_pp0_iter25_reg;
                y_is_0_reg_1275_pp0_iter27_reg <= y_is_0_reg_1275_pp0_iter26_reg;
                y_is_0_reg_1275_pp0_iter28_reg <= y_is_0_reg_1275_pp0_iter27_reg;
                y_is_0_reg_1275_pp0_iter29_reg <= y_is_0_reg_1275_pp0_iter28_reg;
                y_is_0_reg_1275_pp0_iter30_reg <= y_is_0_reg_1275_pp0_iter29_reg;
                y_is_0_reg_1275_pp0_iter31_reg <= y_is_0_reg_1275_pp0_iter30_reg;
                y_is_0_reg_1275_pp0_iter32_reg <= y_is_0_reg_1275_pp0_iter31_reg;
                y_is_0_reg_1275_pp0_iter33_reg <= y_is_0_reg_1275_pp0_iter32_reg;
                y_is_0_reg_1275_pp0_iter7_reg <= y_is_0_reg_1275;
                y_is_0_reg_1275_pp0_iter8_reg <= y_is_0_reg_1275_pp0_iter7_reg;
                y_is_0_reg_1275_pp0_iter9_reg <= y_is_0_reg_1275_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                e_frac_V_2_reg_1249 <= e_frac_V_2_fu_309_p3;
                icmp_ln824_1_reg_1243 <= icmp_ln824_1_fu_289_p2;
                icmp_ln824_1_reg_1243_pp0_iter1_reg <= icmp_ln824_1_reg_1243;
                p_Result_7_reg_1228 <= data_V_fu_263_p1(63 downto 63);
                p_Result_7_reg_1228_pp0_iter1_reg <= p_Result_7_reg_1228;
                tmp_16_reg_1235 <= data_V_fu_263_p1(62 downto 52);
                tmp_16_reg_1235_pp0_iter1_reg <= tmp_16_reg_1235;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                f_Z3_reg_1398 <= pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
            end if;
        end if;
    end process;
    ret_V_10_reg_1403(34 downto 26) <= "000000000";
    ret_V_10_reg_1403_pp0_iter19_reg(34 downto 26) <= "000000000";
    ret_V_10_reg_1403_pp0_iter20_reg(34 downto 26) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z3_V_fu_664_p4 <= m_diff_V_fu_640_p2(42 downto 35);
    Z4_fu_674_p1 <= m_diff_V_fu_640_p2(35 - 1 downto 0);
    Z4_ind_fu_678_p4 <= m_diff_V_fu_640_p2(34 downto 27);
    add_ln1146_1_fu_935_p2 <= std_logic_vector(unsigned(trunc_ln1146_1_fu_922_p3) + unsigned(zext_ln1146_4_fu_919_p1));
    add_ln1146_2_fu_941_p2 <= std_logic_vector(unsigned(trunc_ln3_fu_912_p3) + unsigned(zext_ln1146_3_fu_909_p1));
    add_ln657_2_fu_839_p2 <= std_logic_vector(unsigned(exp_Z2P_m_1_V_reg_1428_pp0_iter26_reg) + unsigned(zext_ln657_4_fu_836_p1));
    add_ln657_fu_762_p2 <= std_logic_vector(unsigned(ret_V_9_reg_1392_pp0_iter20_reg) + unsigned(zext_ln657_2_fu_759_p1));
    and_ln460_1_fu_1159_p2 <= (y_is_inf_fu_987_p2 and and_ln460_fu_1153_p2);
    and_ln460_fu_1153_p2 <= (xor_ln964_fu_1013_p2 and xor_ln407_fu_1096_p2);
    and_ln467_1_fu_1119_p2 <= (xor_ln467_fu_1113_p2 and xor_ln407_fu_1096_p2);
    and_ln467_2_fu_1125_p2 <= (or_ln460_fu_1108_p2 and and_ln467_1_fu_1119_p2);
    and_ln467_3_fu_1165_p2 <= (xor_ln407_fu_1096_p2 and and_ln467_fu_1018_p2);
    and_ln467_fu_1018_p2 <= (y_is_inf_fu_987_p2 and p_Result_7_reg_1228_pp0_iter33_reg);
    and_ln657_1_fu_1131_p2 <= (or_ln657_fu_1027_p2 and and_ln467_2_fu_1125_p2);
    and_ln657_fu_1023_p2 <= (icmp_ln657_reg_1328_pp0_iter33_reg and icmp_ln1453_reg_1333_pp0_iter33_reg);
    and_ln844_1_fu_1183_p2 <= (and_ln844_fu_1177_p2 and and_ln467_2_fu_1125_p2);
    and_ln844_fu_1177_p2 <= (xor_ln657_fu_1171_p2 and icmp_ln844_fu_1047_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to33_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0))) then 
            ap_idle_pp0_0to33 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to33 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to33)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to33 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        select_ln844_1_fu_1195_p3 when (or_ln844_1_fu_1203_p2(0) = '1') else 
        select_ln407_1_fu_1145_p3;
    bitcast_ln521_fu_1092_p1 <= p_Result_10_fu_1082_p4;
    data_V_fu_263_p1 <= exp;
    e_frac_V_1_fu_303_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_8_fu_295_p3));
    e_frac_V_2_fu_309_p3 <= 
        e_frac_V_1_fu_303_p2 when (p_Result_7_fu_267_p3(0) = '1') else 
        p_Result_8_fu_295_p3;
    exp_Z1P_m_1_l_V_fu_848_p2 <= std_logic_vector(unsigned(zext_ln657_5_fu_844_p1) + unsigned(zext_ln1146_1_fu_832_p1));
    exp_Z2P_m_1_V_fu_771_p2 <= std_logic_vector(unsigned(zext_ln657_3_fu_767_p1) + unsigned(zext_ln1146_fu_756_p1));
    exp_Z2_m_1_V_fu_787_p4 <= ((Z2_V_reg_1365_pp0_iter21_reg & ap_const_lv1_0) & tmp_4_reg_1434);
    grp_fu_1217_p1 <= ap_const_lv31_5C55(16 - 1 downto 0);
    grp_fu_320_p1 <= ap_const_lv120_3FFFFD2DBEA0F7B6E(67 - 1 downto 0);
    grp_fu_736_p0 <= grp_fu_736_p00(43 - 1 downto 0);
    grp_fu_736_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_10_fu_721_p4),79));
    grp_fu_736_p1 <= grp_fu_736_p10(36 - 1 downto 0);
    grp_fu_736_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_9_reg_1392),79));
    grp_fu_802_p0 <= grp_fu_802_p00(49 - 1 downto 0);
    grp_fu_802_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2_m_1_V_fu_787_p4),93));
    grp_fu_802_p1 <= grp_fu_802_p10(44 - 1 downto 0);
    grp_fu_802_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_V_reg_1428),93));
    grp_fu_880_p0 <= grp_fu_880_p00(50 - 1 downto 0);
    grp_fu_880_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1465),100));
    grp_fu_880_p1 <= grp_fu_880_p10(50 - 1 downto 0);
    grp_fu_880_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_reg_1470),100));
    icmp_ln1453_fu_557_p2 <= "0" when (r_V_17_fu_483_p3 = sext_ln568_1_fu_467_p1) else "1";
    icmp_ln657_fu_552_p2 <= "1" when (signed(m_exp_reg_1268) > signed(ap_const_lv12_0)) else "0";
    icmp_ln805_fu_593_p2 <= "1" when (trunc_ln805_fu_590_p1 = ap_const_lv18_0) else "0";
    icmp_ln824_1_fu_289_p2 <= "1" when (tmp_17_fu_285_p1 = ap_const_lv52_0) else "0";
    icmp_ln824_fu_340_p2 <= "1" when (tmp_16_reg_1235_pp0_iter5_reg = ap_const_lv11_7FF) else "0";
    icmp_ln840_fu_977_p2 <= "1" when (signed(tmp_13_fu_967_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln844_fu_1047_p2 <= "1" when (signed(r_exp_V_2_reg_1522) < signed(ap_const_lv13_1C02)) else "0";
    isNeg_1_fu_412_p3 <= sub_ln1311_fu_356_p2(10 downto 10);
    isNeg_fu_348_p3 <= m_exp_fu_329_p2(11 downto 11);
    lhs_V_1_fu_822_p5 <= (((Z2_V_reg_1365_pp0_iter26_reg & ap_const_lv1_0) & tmp_4_reg_1434_pp0_iter26_reg) & ap_const_lv2_0);
    lhs_V_4_fu_899_p3 <= (ret_V_11_reg_1485 & ap_const_lv49_0);
    m_diff_V_fu_640_p2 <= std_logic_vector(unsigned(trunc_ln2_reg_1323_pp0_iter15_reg) - unsigned(trunc_ln657_1_reg_1355));
    m_exp_fu_329_p2 <= std_logic_vector(unsigned(zext_ln510_fu_326_p1) + unsigned(ap_const_lv12_C01));
    m_fix_hi_V_fu_520_p4 <= select_ln578_fu_513_p3(129 downto 114);
    m_fix_l_fu_404_p3 <= 
        sext_ln1286_fu_390_p1 when (isNeg_fu_348_p3(0) = '1') else 
        trunc_ln1286_1_fu_400_p1;
    or_ln407_fu_1001_p2 <= (y_is_NaN_fu_996_p2 or y_is_0_reg_1275_pp0_iter33_reg);
    or_ln460_fu_1108_p2 <= (xor_ln460_fu_1102_p2 or p_Result_7_reg_1228_pp0_iter33_reg);
    or_ln657_fu_1027_p2 <= (icmp_ln840_reg_1527 or and_ln657_fu_1023_p2);
    or_ln844_1_fu_1203_p2 <= (or_ln844_fu_1189_p2 or and_ln460_1_fu_1159_p2);
    or_ln844_fu_1189_p2 <= (and_ln844_1_fu_1183_p2 or and_ln467_3_fu_1165_p2);
    out_exp_V_fu_1077_p2 <= std_logic_vector(unsigned(trunc_ln167_reg_1532) + unsigned(ap_const_lv11_3FF));
    p_Result_10_fu_1082_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_1077_p2) & tmp_18_fu_1070_p3);
    p_Result_7_fu_267_p3 <= data_V_fu_263_p1(63 downto 63);
    p_Result_8_fu_295_p3 <= (ap_const_lv2_1 & tmp_17_fu_285_p1);
    p_Result_s_fu_583_p3 <= grp_fu_1217_p3(30 downto 30);
    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln488_fu_808_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter26, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1))) then 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln488_3_fu_752_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter20, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln488_2_fu_693_p1(8 - 1 downto 0);
    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 <= zext_ln488_1_fu_688_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_17_fu_483_p3 <= 
        r_V_2_fu_473_p2 when (isNeg_reg_1292(0) = '1') else 
        r_V_3_fu_478_p2;
    r_V_1_fu_394_p2 <= std_logic_vector(shift_left(unsigned(sext_ln568_fu_345_p1),to_integer(unsigned('0' & sh_prom_i_i366_cast_cast_cast_cast_fu_377_p1(31-1 downto 0)))));
    r_V_2_fu_473_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_reg_1302),to_integer(unsigned('0' & sh_prom_i_i347_cast_cast_cast_cast_fu_470_p1(31-1 downto 0)))));
    r_V_3_fu_478_p2 <= std_logic_vector(shift_right(signed(m_fix_l_reg_1302),to_integer(unsigned('0' & sh_prom_i_i347_cast_cast_cast_cast_fu_470_p1(31-1 downto 0)))));
    r_V_5_fu_504_p2 <= std_logic_vector(shift_left(unsigned(sext_ln568_reg_1287),to_integer(unsigned('0' & zext_ln1253_fu_500_p1(31-1 downto 0)))));
    r_V_6_fu_436_p2 <= std_logic_vector(shift_left(unsigned(sext_ln568_fu_345_p1),to_integer(unsigned('0' & zext_ln1253_1_fu_432_p1(31-1 downto 0)))));
    r_V_7_fu_450_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_reg_1259),to_integer(unsigned('0' & sext_ln1253_1cast_fu_446_p1(31-1 downto 0)))));
    r_V_8_fu_459_p3 <= 
        trunc_ln1252_fu_442_p1 when (isNeg_1_fu_412_p3(0) = '1') else 
        sext_ln1252_fu_455_p1;
    r_V_fu_385_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_reg_1259),to_integer(unsigned('0' & sh_prom_i_i366_cast_cast_castcast_fu_381_p1(31-1 downto 0)))));
    r_exp_V_2_fu_960_p3 <= 
        ret_V_8_reg_1343_pp0_iter32_reg when (tmp_11_fu_947_p3(0) = '1') else 
        r_exp_V_fu_955_p2;
    r_exp_V_fu_955_p2 <= std_logic_vector(signed(ret_V_8_reg_1343_pp0_iter32_reg) + signed(ap_const_lv13_1FFF));
    r_fu_698_p4 <= pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1(25 downto 16);
    ret_V_10_fu_721_p4 <= ((Z3_V_reg_1372_pp0_iter17_reg & ap_const_lv9_0) & f_Z3_reg_1398);
    ret_V_11_fu_886_p2 <= std_logic_vector(unsigned(exp_Z1_V_reg_1460_pp0_iter31_reg) + unsigned(ap_const_lv58_10));
    ret_V_6_fu_929_p2 <= std_logic_vector(unsigned(lhs_V_4_fu_899_p3) + unsigned(zext_ln1146_2_fu_906_p1));
    ret_V_8_fu_613_p3 <= 
        select_ln804_fu_605_p3 when (p_Result_s_fu_583_p3(0) = '1') else 
        ret_V_cast_fu_574_p4;
    ret_V_9_fu_715_p2 <= std_logic_vector(unsigned(zext_ln657_fu_708_p1) + unsigned(zext_ln657_1_fu_711_p1));
    ret_V_cast_fu_574_p4 <= grp_fu_1217_p3(30 downto 18);
    ret_V_fu_599_p2 <= std_logic_vector(unsigned(ret_V_cast_fu_574_p4) + unsigned(ap_const_lv13_1));
    rhs_fu_563_p3 <= (p_Result_9_reg_1313_pp0_iter8_reg & ap_const_lv18_20000);
    select_ln407_1_fu_1145_p3 <= 
        select_ln407_fu_1006_p3 when (or_ln407_fu_1001_p2(0) = '1') else 
        select_ln657_fu_1137_p3;
    select_ln407_fu_1006_p3 <= 
        ap_const_lv64_3FF0000000000000 when (y_is_0_reg_1275_pp0_iter33_reg(0) = '1') else 
        ap_const_lv64_7FFFFFFFFFFFFFFF;
    select_ln578_fu_513_p3 <= 
        r_V_8_reg_1308 when (tmp_7_fu_490_p3(0) = '1') else 
        trunc_ln1286_2_fu_509_p1;
    select_ln657_fu_1137_p3 <= 
        select_ln658_fu_1039_p3 when (and_ln657_1_fu_1131_p2(0) = '1') else 
        bitcast_ln521_fu_1092_p1;
    select_ln658_fu_1039_p3 <= 
        ap_const_lv64_0 when (tmp_14_fu_1032_p3(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln804_fu_605_p3 <= 
        ret_V_cast_fu_574_p4 when (icmp_ln805_fu_593_p2(0) = '1') else 
        ret_V_fu_599_p2;
    select_ln844_1_fu_1195_p3 <= 
        ap_const_lv64_0 when (or_ln844_fu_1189_p2(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
        sext_ln1252_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_fu_450_p2),130));

        sext_ln1253_1_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_2_fu_420_p3),32));

    sext_ln1253_1cast_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1253_1_fu_428_p1),120));
        sext_ln1253_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_exp_reg_1268),32));

        sext_ln1286_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_385_p2),130));

        sext_ln1311_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_fu_356_p2),12));

        sext_ln568_1_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_reg_1259_pp0_iter6_reg),130));

        sext_ln568_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_reg_1259),131));

    sh_prom_i_i347_cast_cast_cast_cast_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i366_cast_cast_cast_reg_1297),130));
    sh_prom_i_i366_cast_cast_cast_cast_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i366_cast_cast_cast_fu_373_p1),131));
        sh_prom_i_i366_cast_cast_cast_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_365_p3),32));

    sh_prom_i_i366_cast_cast_castcast_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i366_cast_cast_cast_fu_373_p1),120));
    sub_ln1311_fu_356_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_16_reg_1235_pp0_iter5_reg));
    tmp_11_fu_947_p3 <= ret_V_6_fu_929_p2(106 downto 106);
    tmp_13_fu_967_p4 <= r_exp_V_2_fu_960_p3(12 downto 10);
    tmp_14_fu_1032_p3 <= m_frac_l_V_reg_1259_pp0_iter33_reg(119 downto 119);
    tmp_17_fu_285_p1 <= data_V_fu_263_p1(52 - 1 downto 0);
    tmp_18_fu_1070_p3 <= 
        tmp_fu_1052_p4 when (tmp_11_reg_1517(0) = '1') else 
        tmp_1_fu_1061_p4;
    tmp_1_fu_1061_p4 <= add_ln1146_1_reg_1507(104 downto 53);
    tmp_7_fu_490_p3 <= m_exp_reg_1268(11 downto 11);
    tmp_fu_1052_p4 <= add_ln1146_2_reg_1512(105 downto 54);
    trunc_ln1146_1_fu_922_p3 <= (trunc_ln1146_2_reg_1502 & ap_const_lv49_0);
    trunc_ln1146_2_fu_895_p1 <= ret_V_11_fu_886_p2(56 - 1 downto 0);
    trunc_ln1146_fu_891_p1 <= ret_V_11_fu_886_p2(57 - 1 downto 0);
    trunc_ln1252_fu_442_p1 <= r_V_6_fu_436_p2(130 - 1 downto 0);
    trunc_ln1286_1_fu_400_p1 <= r_V_1_fu_394_p2(130 - 1 downto 0);
    trunc_ln1286_2_fu_509_p1 <= r_V_5_fu_504_p2(130 - 1 downto 0);
    trunc_ln167_fu_983_p1 <= r_exp_V_2_fu_960_p3(11 - 1 downto 0);
    trunc_ln3_fu_912_p3 <= (trunc_ln1146_reg_1497 & ap_const_lv49_0);
    trunc_ln805_fu_590_p1 <= grp_fu_1217_p3(18 - 1 downto 0);
    ush_2_fu_420_p3 <= 
        m_exp_fu_329_p2 when (isNeg_1_fu_412_p3(0) = '1') else 
        sext_ln1311_fu_361_p1;
    ush_fu_365_p3 <= 
        sext_ln1311_fu_361_p1 when (isNeg_fu_348_p3(0) = '1') else 
        m_exp_fu_329_p2;
    xor_ln407_fu_1096_p2 <= (or_ln407_fu_1001_p2 xor ap_const_lv1_1);
    xor_ln460_fu_1102_p2 <= (y_is_inf_fu_987_p2 xor ap_const_lv1_1);
    xor_ln467_fu_1113_p2 <= (ap_const_lv1_1 xor and_ln467_fu_1018_p2);
    xor_ln657_fu_1171_p2 <= (or_ln657_fu_1027_p2 xor ap_const_lv1_1);
    xor_ln828_fu_991_p2 <= (icmp_ln824_1_reg_1243_pp0_iter33_reg xor ap_const_lv1_1);
    xor_ln964_fu_1013_p2 <= (p_Result_7_reg_1228_pp0_iter33_reg xor ap_const_lv1_1);
    y_is_0_fu_335_p2 <= "1" when (tmp_16_reg_1235_pp0_iter5_reg = ap_const_lv11_0) else "0";
    y_is_NaN_fu_996_p2 <= (xor_ln828_fu_991_p2 and icmp_ln824_reg_1281_pp0_iter33_reg);
    y_is_inf_fu_987_p2 <= (icmp_ln824_reg_1281_pp0_iter33_reg and icmp_ln824_1_reg_1243_pp0_iter33_reg);
    zext_ln1146_1_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_1_fu_822_p5),52));
    zext_ln1146_2_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_19_reg_1490),107));
    zext_ln1146_3_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_19_reg_1490),106));
    zext_ln1146_4_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_19_reg_1490),105));
    zext_ln1146_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_10_reg_1403_pp0_iter20_reg),44));
    zext_ln1253_1_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1253_1_fu_428_p1),131));
    zext_ln1253_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1253_fu_497_p1),131));
    zext_ln488_1_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_fu_678_p4),64));
    zext_ln488_2_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_V_fu_664_p4),64));
    zext_ln488_3_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_V_reg_1365_pp0_iter19_reg),64));
    zext_ln488_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_1360_pp0_iter25_reg),64));
    zext_ln510_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_reg_1235_pp0_iter5_reg),12));
    zext_ln657_1_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_698_p4),36));
    zext_ln657_2_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln657_4_reg_1418),36));
    zext_ln657_3_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_fu_762_p2),44));
    zext_ln657_4_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln657_5_reg_1455),44));
    zext_ln657_5_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_2_fu_839_p2),52));
    zext_ln657_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_reg_1377),36));
end behav;
